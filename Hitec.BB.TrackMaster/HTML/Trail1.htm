<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
    <title>Individual Location on Map</title>
    <!--<link href="../css/Map/Map/LocationOnmapCSS/map.css" rel="Stylesheet" media="screen" />-->
    <link rel="stylesheet" href="../css/Map/Map/LocationOnmapCSS/MapStyle.css" type="text/css"
        media="screen" />
     <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false" language="javascript"
        type="text/javascript"></script>
         <script src="../js/Map/LocationOnMap/jquery-1.7.1.min.js" type="text/javascript"></script>
    <script src="../js/Map/LocationOnMap/CreateMapMarker.js" type="text/javascript"></script>
   
    <script language="javascript" type="text/javascript">
        var BoxID;
        var VehName;
        var Location;
        var Longitude;
        var Latitude;
        var Speed;
        var angle;
        var DataDate;
        var Icontype;
        var Status;

        var map;
        var flightPlanCoordinates = [];
        var gmarkers = [];
        var flightPath;
        var delay = 15000;
        var timerRunning = false;
        var timerID;
        var zoomToExtents = 0;
        var autoZoom = true;
        var showTrail = true;

        //------------------ Initialize Timer ----------------------//
        function initializeTimer() {
            zoomToExtents = 0;
            initialize();
            StopTheClock();
            //document.getElementById('product').innerHTML = "loading vehicle...";
            StartTheTimer();
        }

        function StopTheClock() {
            if (timerRunning)
                clearTimeout(timerID)
            timerRunning = false;
        }
        function StartTracking() {
            StartTheTimer();
        }
        function StartTheTimer() {
            getdata();
            timerRunning = true;
            timerID = self.setTimeout("StartTracking()", 15000);
        }

        function initialize() {
            var myLatLng = new google.maps.LatLng(30.7234, 76.76);
            //alert(myLatLng);
            var mapOptions = {
                zoom: 10,
                center: myLatLng,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };

            map = new google.maps.Map(document.getElementById('map_canvas'), mapOptions);
        }
    </script>
 
     <script src="../js/Map/LocationOnMap/CreateMapArrow.js" type="text/javascript"></script>
    <script type="text/javascript">
        function getParameterByName(name) {

            name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
            var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
            results = regex.exec(location.search);
            return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
        }
        function GETSTRING() {
            var data = [];
            var param;
            for (x = 0; x < arguments.length; ++x) {
                param = location.href.match(new RegExp("/\?".concat(arguments[x], "=", "([^\n&]*)")));
                if (param == null) {
                    data.push("");
                } else {
                    data.push(param[1]);
                }
            }
            return data;
        }
    </script>
    
    <script type="text/javascript">
        function getdata() {
            var id;
            var vehname;
            var drivername;
            var drmob = '';
            var lat1;
            var long1;


            id = GETSTRING('bbid');
            document.getElementById('txtVehname').value = getParameterByName('lat1');
            //vehname = 'PB';
            lat1 = getParameterByName('Lat');
            long1 = getParameterByName('Long');
            alert(lat1);

            $.getJSON("/Custom/GetBoxTrail?bbid=" + id,
                    function (data) {

                        //clear markers
                        if (gmarkers) {
                            for (i in gmarkers) {
                                gmarkers[i].setMap(null);
                            }
                            gmarkers.length = 0;
                        }
                        if (flightPath != null) {
                            flightPath.setMap(null);
                        }
                        var i = 0;
                        // loop through values
                        $.each(data, function (key, val) {
                            flightPlanCoordinates[i] = new google.maps.LatLng(lat1, long1);

                            // define lat-long for positioning Marker
                            var myLatlng = new google.maps.LatLng(lat1, long1);
                            Speed = val.Speed;
                            Location = val.Location;
                            //drivername = val.dataMode;
                            //drmob = val.distance;
                            angle = val.angle;

                            DataDate = val.DataDate;
                            Icontype = val.IconType;
                            var html = "Vehicle Name:" + document.getElementById('txtVehname').value + "<br/> Date-Time: " + DataDate + "<br/> Speed: " + Speed + "<br/> Location: " + Location
                            //alert(html);
                            //alert(Icontype);
                            if (i == 0) {

                                //   if (Icontype == 4) {




                                var marker = createMarker(myLatlng, vehname, html, Icontype, "status", map);
                                var marker1 = initMap(myLatlng, vehname, html, Icontype, "status", map, angle);
                                gmarkers.push(marker);
                                gmarkers.push(marker1);
                                //}
                                //else {
                                //    if (Speed > 0) {
                                //        // call function to create Marker
                                //        var marker = createMarker(myLatlng, vehname, html, "2", "status", map);
                                //        gmarkers.push(marker);
                                //    }
                                //    else {
                                //        var marker = createMarker(myLatlng, vehname, html, "3", "status", map);
                                //        gmarkers.push(marker);
                                //    }
                                //}
                            }
                            else {
                                //if (Speed > 0) {
                                showTrail = $('#checkTrail').is(':checked');
                                if (showTrail == true) {
                                    // call function to create Marker
                                    var marker = createMarker(myLatlng, vehname, html, "1", "status", map);
                                    gmarkers.push(marker);
                                    //}
                                }
                            }
                            i++;

                        });

                        //auto center
                        reCenter();

                        if (showTrail == true) {
                            flightPath = new google.maps.Polyline({
                                path: flightPlanCoordinates,
                                strokeColor: '#0000FF',
                                strokeOpacity: 0.8,
                                strokeWeight: 5
                            });

                            flightPath.setMap(map);
                        }
                    })
                .fail(
                    function (jqXHR, textStatus, err) {
                        $('#product').html('Error: ' + jqXHR.responseText);
                    });

        }
    </script>
    <script type="text/javascript" language="javascript">
        // ---------------- Show Hide Trail -------------
        function showHideTrail(check) {

            for (var i = 1; i < gmarkers.length; i++) {
                if (check == false) {
                    gmarkers[i].setMap(null);
                    flightPath.setMap(null);
                }
                else {
                    gmarkers[i].setMap(map);
                    flightPath.setMap(map);
                }
            }
        }

        // ---------------- Re-Center map to bounds -------------
        function reCenter() {
            try {
                autoZoom = $('#checkZoom').is(':checked');
            }
            catch (ex) {
            }
            if (autoZoom == true) {
                var bound = new google.maps.LatLngBounds();
                for (var i in gmarkers) {
                    bound.extend(gmarkers[i].getPosition());
                }
                map.fitBounds(bound);
                //zoomToExtents = 1;
            }
        }
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            $(".trigger").click(function () {
                $(".panel").toggle("fast");
                $(this).toggleClass("active");
                return false;
            });
        });
    </script>
</head>
<body onload="initialize();">
    <noscript>
        <b>JavaScript must be enabled in order for you to use Google Maps.</b> However,
        it seems JavaScript is either disabled or not supported by your browser. To view
        Google Maps, enable JavaScript by changing your browser options, and then try again.
    </noscript>
    <div id="container22">
        <div id="map_canvas" style="width: 100%; height:450px;">
        </div>

        <div class="panel" style="height:200px; width:auto;display:none">
            <div style="background: #FFFFD2; border: 1px solid #FF9E00; height: auto; padding: 1px 5px; width: 280px; z-index: 99999; margin-bottom: 5px;">
                To complete polygon, connect the end point of polygon with the starting point.
            </div>
            <div style="background: #FFFFD2; border: 1px solid #FF9E00; height: auto; padding: 1px 5px; width: 280px; z-index: 99999; margin-bottom: 10px;">
                Previously created fence will be over-written.
            </div>
            <input type="text" id="txtlat" style="display: none" />
            <input type="text" id="txtlon" style="display: none" />

            <div style="clear: both; height: 20px;">
            </div>
            <div>
                <label>
                    Fence Name:</label><br />
                <input type="text" id="txtFenceName" style="width: 180px;" onkeyup="copy_data(this)" />
            </div>
            <div style="clear: both; height: 20px;">
            </div>
            <div>
                <input id="saveFence" value="Save Fence" type="button" class="button" />
                <input id="reset" value="Reset" type="button" class="button" onclick="showDivclr()" />
            </div>
            <div id="Mesasage" style="display: none; color: #f21a1a; padding-top: 5px;">
            </div>
            <div id="dataPanel" style="display: none;">
            </div>
            <div id="resultPanel" style="height: 50px; font-size: small;" runat="server" clientidmode="Static">
            </div>
        </div>
        <a class="trigger active" href="#">Set Geofence</a>
    </div>
</body>
</html>
