<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
    <title>Route Playback</title>
    <link href="/css/Map/Map/LocationOnmapCSS/map.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="/css/Map/Map/LocationOnmapCSS/mapstyle.css" type="text/css"
        media="screen" />
    

  <!--  <script type="text/javascript" src="/js/Map/LocationOnMap/label.js"></script>-->
 <!--   <script type="text/javascript" src="/js/Map/LocationOnMap/Fluster2.packed.js"></script>-->
    <script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.1.1.min.js" type="text/javascript"></script>
    <script type="text/javascript" src="/js/Map/polygon.min.js"></script>
    <script src="/Content/js/APIURL.js" type="text/javascript"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBu4NyT_yiDqc-z09IviAzDSZDxPi2LTgg&libraries=drawing,places" language="javascript" type="text/javascript"></script>
    <link href="/Content/css/CssCustom.css" rel="stylesheet" />
    <link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet" type="text/css" />
    <script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js" type="text/javascript"></script>

    <style type="text/css">
  
        .labels {
     margin-top:-3px;
     padding: 5px;
     position: absolute;
    visibility: visible;
    z-index: 1030;
}
.labels.active .inner {
    background: cyan;
}
.labels.hover .inner {
    background-color: yellow;
}


.labels .arrow{
    border-top-color: #000000;
    border-right-color: rgba(0,0,0,0);
    border-bottom-color: rgba(0,0,0,0);
    border-left-color: rgba(0,0,0,0);
    border-width: 5px 5px 0;
    bottom: 0;
    left: 50%;
    margin-left: -5px;
    border-style: solid;
    height: 0;
    position: absolute;
    width: 0;
}
.labels .inner{
    background-color: #000000;
    border-radius: 4px;
    color: #FFFFFF;
    max-width: 200px;
    padding: 3px 8px;
    text-align: center;
    text-decoration: none;  
}


.labels.active .arrow {
    
    border-top-color: #00ffff;
    border-right-color: rgba(0,255,255,0);
    border-bottom-color: rgba(0,255,255,0);
    border-left-color: rgba(0,255,255,0);

}
.labels.hover .arrow {
    border-top-color: #ffff00;
    border-right-color: rgba(255,255,0,0);
    border-bottom-color: rgba(255,255,0,0);
    border-left-color: rgba(255,255,0,0);
}
        .panelnew {
    position: absolute;
    top: 95px;
    /* right: 0; */
    /* display: none; */
    background: #fff;
    border: 1px solid #ccc;
    width: 300px;
    height: auto;
    padding: 10px;
    filter: alpha(opacity=85);
    opacity: .85;
        left: 10px;
}

 

        .panel1 {
            background: none repeat scroll 0 0 #fff;
            border: 1px solid #ccc;
            height: auto;
            left: 0;
            opacity: 0.85;
            padding: 10px;
            position: absolute;
            top: 80px;
            width: 300px;
            display: none;
        }

        .cursor {
            cursor: pointer;
        }

        a.trigger1 {
            position: absolute !important;
            text-decoration: none !important;
            top: 54px !important;
            left: 10px !important;
            color: #fff !important;
            padding: 10px 40px 10px 15px !important;
            background: #526ea6 url(../Content/map/plus.png) 85% 55% no-repeat !important;
          
        }

        a.active.trigger1 {
            background: #526ea6 url(../Content/map/minus.png) 85% 55% no-repeat !important; /**/
        }

        .panel p {
            margin: -8px 11px 6px -3px !important;
        }

        .btn-danger:hover, .btn-danger:active, .btn-danger.active, .btn-danger.disabled, .btn-danger[disabled] {
            color: #ffffff !important;
            background-color: grey !important;

        }
        .btn-danger {
            border:none;
            font-weight:100 !important;
            font-size:11px;
        }
        .btn-success {
            border:none;
            font-weight:100 !important;
            font-size:11px;

        }
          .btn-default {
            border:none;
            font-weight:100 !important;
            font-size:11px;

        }
        /*.btn-radius {
            border-radius: 50% !important;
            margin: 02px;
        }*/
        input[type=range].ps7 { -webkit-appearance: none;width: 100%; } input[type=range].ps7:focus { outline: none; } input[type=range].ps7::-webkit-slider-runnable-track { animate: 0.2s;background: #2497E3;border: 0px solid #000000;border-radius: 1px;box-shadow: 0px 0px 0px #000000;cursor: pointer;height: 5px;width: 100%; } input[type=range].ps7::-webkit-slider-thumb { background: #A1D0FF;border: 1px solid #2497E3;border-radius: 25px;box-shadow: 0px 0px 0px #000000;cursor: pointer;height: 18px;margin-top: -7px;webkit-appearance: none;width: 18px; } input[type=range].ps7:focus::-webkit-slider-runnable-track { background: #2497E3; } input[type=range].ps7::-moz-range-track { animate: 0.2s;background: #2497E3;border: 0px solid #000000;border-radius: 1px;box-shadow: 0px 0px 0px #000000;cursor: pointer;height: 5px;width: 100%; } input[type=range].ps7::-moz-range-thumb { background: #A1D0FF;border: 1px solid #2497E3;border-radius: 25px;box-shadow: 0px 0px 0px #000000;cursor: pointer;height: 18px;width: 18px; } input[type=range].ps7::-ms-track { animate: 0.2s;background: transparent;border-color: transparent;color: transparent;cursor: pointer;height: 5px;width: 100%; } input[type=range].ps7::-ms-fill-lower { background: #2497E3;border: 0px solid #000000;border-radius: 2px;box-shadow: 0px 0px 0px #000000; } input[type=range].ps7::-ms-fill-upper { background: #2497E3;border: 0px solid #000000;border-radius: 2px;box-shadow: 0px 0px 0px #000000; } input[type=range].ps7::-ms-thumb {margin-top:1px; background: #A1D0FF;border: 1px solid #2497E3;border-radius: 25px;box-shadow: 0px 0px 0px #000000;cursor: pointer;height: 18px;width: 18px; } input[type=range].ps7:focus::-ms-fill-lower { background: #2497E3; } input[type=range].ps7:focus::-ms-fill-upper { background: #2497E3; }
        #side_bar p{
            margin: auto !important;
        }
    </style>

    <script type="text/javascript">
        var india = new google.maps.LatLng(30.701844, 76.821849);
        var Doha = new google.maps.LatLng(25.2854, 51.5310);
        var kmperhr;
        var target;
        var markers = [];
        var iterator = 0;
        var map;
        var map2;
        var n = 0;
        var j = 0;

        var isstooped = 0;
        var neighborhoods = [];
        var html = [];
        var infoWin = [];
        var sideInfoWin = [];
        var sidebar = [];
        var gmarkers = [];
        var side_bar_html = "";
        var timerA;
        var timerB;
        var timersAA = new Array();
        var timersBB = new Array();
        var icon_type = [];
        timer1 = 200;
        timer2 = 500;
        var creator = "";
        var markerLive;
        var marker;
        var arry=[];
        var line = [];
        var lineMarker = [];
        // var latx = document.getElementById('txtlat').value;
        //  var lonx = document.getElementById('txtlon').value;
        //******************* BEGIN INITIALIZE MAP **************************/
        function initialize() {
    var url = window.location.href;
            var myVar = 'infotrac';
            var loc;
           
            if (url.indexOf(myVar) > -1) {
                loc = Doha;
            }

            else {
                loc = india;
            }
            var mapOptions = {
                zoom: 13,
               // mapTypeId: google.maps.MapTypeId.ROADMAP,
                gestureHandling: 'greedy',
                center: loc,
                zoomControlOptions: {
                    position: google.maps.ControlPosition.LEFT_CENTER
                },
                styles: [
               {
                   "featureType": "poi",
                   "stylers": [
                     { "visibility": "on" }
                   ]
               }
    
                ],
            };
            directionsService = new google.maps.DirectionsService();
            document.getElementById("map_canvas").style.backgroundImage = "url(../img/515-500loading.jpg)";
            document.getElementById('startEndPos').innerHTML = "Loading...";
            map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

          
            if ($("#tglShowHideFence").prop('checked')) {
                var value = getUrlParameter("tableName");
                GeoFence(value);
            }
            if ($("#tglShowHidePOI").prop('checked')) {
                PointOfInterest();
            }
            if ($("#tglShowHideHalts").prop('checked')) {
                StopHalts();
            }


            //test
            // Create a renderer for directions and bind it to the map.
            var rendererOptions = {
                map: map
            };
            directionsDisplay = new google.maps.DirectionsRenderer(rendererOptions);

            // Instantiate an info window to hold step text.
            stepDisplay = new google.maps.InfoWindow();

            polyline = new google.maps.Polyline({
                path: [],
                strokeColor: '#FF0000',
                strokeWeight: 3
            });
            poly2 = new google.maps.Polyline({
                path: [],
                strokeColor: '#FF0000',
                strokeWeight: 3
            });
            //end test


            $('#txtname').text(localStorage.getItem("vehicleName"));
            $('#txtdate').text(localStorage.getItem("fromDate") + " To " + localStorage.getItem("toDate"));
            $('#txtvehname').text(localStorage.getItem("vehicleName"));
            $('#txtfromdate').text(localStorage.getItem("fromDate"));
            $('#txttodate').text(localStorage.getItem("toDate"));
            RouteWithDirection();
            readData();

            //for getting window height

            var height = $(window).height();
            $('#map').css('height', height);0

        }
        //******************* END INITIALIZE MAP **************************/
        var delay = 100;
        function animateMarker(marker, coords) {

            
        
            kmperhr = kmperhr || 50;


       

            function goToPoint() {
              
                
                var lat = coords[target].lat();
             
                var lng = coords[target].lng();
                var step = (kmperhr * 1000 * delay) / 3600000; // in meters

                var dest = new google.maps.LatLng(
                coords[target].lat(), coords[target].lng());

                var distance =
                google.maps.geometry.spherical.computeDistanceBetween(
                dest, marker.position); // in meters

                var numStep = distance / step;
                var i = 0;
                var deltaLat = (coords[target].lat() - lat) / numStep;
                var deltaLng = (coords[target].lng() - lng) / numStep;

                function moveMarker() {
                    
                   
                   
                    lat += deltaLat;
                    lng += deltaLng;
                    i += step;

                    if (i < distance) {

                        if (isstooped == 0) {
                            var end = parseInt(target) + 1;
                            var flightPlanCoordinates = [
                                neighborhoods[target], neighborhoods[end]
                            ];
                            var flightPath = new google.maps.Polyline({
                                path: flightPlanCoordinates,
                                strokeColor: "#0080ff",                               
                                strokeOpacity: 1,
                                strokeWeight: 5
                            });
                            google.maps.event.addListener(flightPath, 'mouseover', (function (flightPath, target) {
                                return function () {
                                    var infowindow = new google.maps.InfoWindow(
                               {
                                   content: html[target ],
                                   size: new google.maps.Size(50, 50)
                               });

                                    sideInfoWin.push(infowindow);
                                    clearOverlays();
                                    infowindow.open(map, gmarkers[target]);
                                    setTimeout(function () { $('button.gm-ui-hover-effect img').css('height', 'auto').css('width', 'auto').css('margin', '0px'); }, 10);

                                };
                            })(flightPath, target)
);
                            document.getElementById('side_bar').innerHTML = sidebar[target] + document.getElementById('side_bar').innerHTML;
                            flightPath.setMap(map);
                            marker.setPosition(new google.maps.LatLng(lat, lng));
                            map.setCenter(marker.position);

                            $("input[type=range]").val(target);
                        }
                        setTimeout(moveMarker, delay);
                    }
                    else {
                        
                        if (isstooped == 0) {


                            var end = parseInt(target) + 1;
                            var flightPlanCoordinates = [
                                neighborhoods[target], neighborhoods[end]
                            ];
                            var flightPath = new google.maps.Polyline({
                                path: flightPlanCoordinates,
                                strokeColor: "#0080ff",
                                strokeOpacity: 1,
                                strokeWeight: 5
                            });


                            google.maps.event.addListener(flightPath, 'mouseover', (function (flightPath, target) {
                                return function () {
                                    var infowindow = new google.maps.InfoWindow(
                               {
                                   content: html[target],
                                   size: new google.maps.Size(50, 50)
                               });

                                    sideInfoWin.push(infowindow);
                                    clearOverlays();
                                    infowindow.open(map, gmarkers[target]);
                                    setTimeout(function () { $('button.gm-ui-hover-effect img').css('height', 'auto').css('width', 'auto').css('margin', '0px'); }, 10);

                                };
                            })(flightPath, target)
           );
                            document.getElementById('side_bar').innerHTML = sidebar[target] + document.getElementById('side_bar').innerHTML;
                            flightPath.setMap(map);
                            marker.setPosition(dest);

                            map.setCenter(marker.position);
                            
                            $("input[type=range]").val(target);
                            target++;
                            if (target == coords.length) {
                                document.getElementById("playbackdetails").style.display = 'none';
                                document.getElementById("imgPause").style.display = 'none';
                                document.getElementById("playR").style.display = 'block';
                                target = 0;
                                $("input[type=range]").val(0);
                                marker.setMap(null);
                                return false;
                            }

                        }
                        setTimeout(goToPoint, delay);
                    }
                }
                moveMarker();
            }
            goToPoint();
        }

      
       
        //******************* BEGIN DROP **************************/
        var flightPlanCoordinates = [];

       
        function drop() {
           

           isstooped = 0;
           // var myOptions = {
           //     zoom: 16,
           //     center: new google.maps.LatLng(arry[0][0], arry[0][1]),
           //     mapTypeId: google.maps.MapTypeId.ROADMAP
               
           // };
           //map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);
          


           


           
           var newv = $('#slidernew').val();

            document.getElementById("playbackdetails").style.display = 'block';
            document.getElementById("imgPause").style.display = 'block';
            document.getElementById("playR").style.display = 'none';


            var stoppoint = (neighborhoods.length) - 1;
            var ccc = iterator;


            if (parseInt(ccc) == parseInt(stoppoint)) {

                newv = 0;
            }


            if (newv == 0) {
                newv = 1;

            //    pause();
      
                // darg feature
                if (newv > parseInt(iterator)) {
                    for (var i = parseInt(iterator) ; i < newv; i++) {
                        addLine();
                      //  addMarker(1);
                    }
                }
                else {
                    for (var i = newv; i < line.length ;) {
                        line[i].setMap(null);
                        line.splice(i, 1);
                        if (neighborhoods.length > 100) {
                            if (iterator % 5 == 0) {
                                $("#side_bar p:first-child").remove();
                            }
                        }
                        else {
                            $("#. p:first-child").remove();
                        }
                        iterator--;
                    }
                    iterator = newv;
                    var data = "<div>Playing route...[" + (iterator).toString() + "] Total waypoints:" + neighborhoods.length.toString() + "</div>";
                    document.getElementById('playing').innerHTML = data;
                    if (iterator < neighborhoods.length - 2) {
                        map.panTo(neighborhoods[iterator]);
                    }
                
                   // addMarker(1);
                }
            }



   
            if (j == 0) {
                var mapCenter = neighborhoods[0];
                map.setCenter(mapCenter);
                //J is set to 1 for first time enter in this block
                j = 1;
            }
            for (var i = 0; i < neighborhoods.length; i++) {
                if (i == 0) {


                }
                else if (i == neighborhoods.length - 1) {
                    //$("#playR").show();
                }
                //for (var i = 0; i < neighborhoods.length - 15; i = i + 15) {
                //    timerA = setTimeout(function () {
                //        addMarker();
                //    }, i * timer2);
                //    timersAA.push(timerA);
                //}
                //for (var i = 0; i < neighborhoods.length - 2; i++) {

                timerB = setTimeout(function () {
                //   addMarker(neighborhoods.length);
                    addLine();
                }, i * timer1);
                timersBB.push(timerB);
            }


            if (target > 0 && target == neighborhoods.length)
            {
             
                marker = new google.maps.Marker({
                    position: new google.maps.LatLng(arry[0][0], arry[0][1]),
                    map: map,
                    icon: 'http://trackmaster.in/images/truckmove.png'
                });

                target = 0;

                if (kmperhr > 500)
                {

                }
                else
                {
                    kmperhr = 500;
                }
               
                google.maps.event.addListenerOnce(map, 'idle', function () {
                    animateMarker(marker, neighborhoods);
                });
            }
            else if (target > 0) {

         
            }
            else
            {

                marker = new google.maps.Marker({
                    position: new google.maps.LatLng(arry[0][0], arry[0][1]),
                    map: map,
                    icon: 'http://trackmaster.in/images/truckmove.png'
                });

                target = 0;
                if (kmperhr > 500) {

                }
                else {
                    kmperhr = 500;
                }
                //kmperhr = 500;
                google.maps.event.addListenerOnce(map, 'idle', function () {
                    animateMarker(marker, neighborhoods);
                });
            }


           
        }


        var step = 50; // 5; // metres
        var tick = 1000; // milliseconds
        var eol;
        var k = 0;
        var stepnum = 0;
        var speed = "";
        var lastVertex = 1;

        //=============== animation functions ======================
        function updatePoly(d) {
            // Spawn a new polyline every 20 vertices, because updating a 100-vertex poly is too slow
            if (poly2.getPath().getLength() > 20) {
                poly2 = new google.maps.Polyline([polyline.getPath().getAt(lastVertex - 1)]);
                // map.addOverlay(poly2)
            }

            if (polyline.GetIndexAtDistance(d) < lastVertex + 2) {
                if (poly2.getPath().getLength() > 1) {
                    poly2.getPath().removeAt(poly2.getPath().getLength() - 1);
                }
                poly2.getPath().insertAt(poly2.getPath().getLength(), polyline.GetPointAtDistance(d));
            } else {
                poly2.getPath().insertAt(poly2.getPath().getLength(), endLocation.latlng);
            }
        }

        function animate(d) {
            if (d > eol) {
                map.panTo(endLocation.latlng);
                marker.setPosition(endLocation.latlng);
                return;
            }
            var p = polyline.GetPointAtDistance(d);
            map.panTo(p);
            var lastPosn = marker.getPosition();
            marker.setPosition(p);
            var heading = google.maps.geometry.spherical.computeHeading(lastPosn, p);
            icon.rotation = heading;
            marker.setIcon(icon);
            updatePoly(d);
            timerHandle = setTimeout("animate(" + (d + step) + ")", tick);
        }

        function startAnimation() {
          
            eol = polyline.Distance();
            map.setCenter(polyline.getPath().getAt(0));
            marker = new google.maps.Marker({
                position: polyline.getPath().getAt(0),
                map: map,
                icon: icon
            });

            poly2 = new google.maps.Polyline({
                path: [polyline.getPath().getAt(0)],
                strokeColor: "#0000FF",
                strokeWeight: 10
            });
            // map.addOverlay(poly2);
            setTimeout("animate(100)", 10000); // Allow time for the initial map display
        }
        google.maps.event.addDomListener(window, 'load', initialize);

        //=============== ~animation funcitons =====================

     //  var car = "M17.402,0H5.643C2.526,0,0,3.467,0,6.584v34.804c0,3.116,2.526,5.644,5.643,5.644h11.759c3.116,0,5.644-2.527,5.644-5.644 V6.584C23.044,3.467,20.518,0,17.402,0z M22.057,14.188v11.665l-2.729,0.351v-4.806L22.057,14.188z M20.625,10.773 c-1.016,3.9-2.219,8.51-2.219,8.51H4.638l-2.222-8.51C2.417,10.773,11.3,7.755,20.625,10.773z M3.748,21.713v4.492l-2.73-0.349 V14.502L3.748,21.713z M1.018,37.938V27.579l2.73,0.343v8.196L1.018,37.938z M2.575,40.882l2.218-3.336h13.771l2.219,3.336H2.575z M19.328,35.805v-7.872l2.729-0.355v10.048L19.328,35.805z";

       // var car = "http://maps.google.com/mapfiles/ms/icons/green-dot.png";

        var icon = {
            // path: car,
         //   path:'http://maps.google.com/mapfiles/ms/icons/green-dot.png',
            scale: .9,
            //strokeColor: 'white',
            //strokeWeight: .10,
            //fillOpacity: 1,
            //fillColor: '#404040',
         
            fillColor: 'red',
            fillOpacity: 1.1,
            strokeColor: 'red',
            offset: '5%',
            // rotation: parseInt(heading[i]),
            anchor: new google.maps.Point(10, 25) // orig 10,50 back of car, 10,0 front of car, 10,25 center of car
        };










        //******************* END DROP **************************/


        //******************* BEGIN ADD MARKER **************************/
        var image = "../map/beachflag.png";

        //for deleting existing markers when route is playing
        var markersDeleting = [];



   


        function addMarker(totalPoints) {
          
            if (iterator < neighborhoods.length - 1) {
                setMapOnAll(null);
            }
            var end = parseInt(iterator) + 1;
            var p1 = neighborhoods[iterator];
            var p2 = neighborhoods[end];

            var markerpos;
            var g = google.maps;
            markerpos = g.geometry.spherical.interpolate(p1, p2, .5);

            var dir = g.geometry.spherical.computeHeading(p1, p2).toFixed(1);
            icon.rotation = parseInt(parseFloat(dir).toFixed());
            if (iterator < neighborhoods.length) {
                map.panTo(neighborhoods[iterator]);
            }

         
             marker = new google.maps.Marker({
                position: neighborhoods[iterator],
                map: map,
                draggable: false,
                icon: icon,
                //animation: google.maps.Animation
            });




        
            ////jQuery(marker).hide();

            //setInterval(function () {

            //    marker.set("fillOpacity", marker.get("fillOpacity") - 1.0);
            //    console.log(marker.fillOpacity);
            //}, 100);


            //setTimeout(function () {
            //   // marker.setMap(null);
            //    //   fadeInMarkers(markers);
            //    marker.setOpacity(0);
            //    marker.fadeOut('slow');
               
            //}, 200);

            //setTimeout(function () {
            //    markers.setOpacity(0.05);
            //    marker.fillOpacity -= .01;
            //    marker.setMap(null);
               
            //}, 700);
            //setInterval(function () {
            //    marker.fillOpacity -= .01;
            //    console.log(marker.fillOpacity);
            //}, 200);

            //setTimeout(function () {
            //    marker.setMap(null);
            //    delete marker;
            //}, 300);


            //var measle = new google.maps.Marker({
            //    position: map.getCenter(),
            //    map: map,
            //    optimized: false,
            //    icon: {
            //        url: "https://maps.gstatic.com/intl/en_us/mapfiles/markers2/measle.png",
            //        size: new google.maps.Size(7, 7),
            //        anchor: new google.maps.Point(3.5, 3.5)
            //    }
            //})

           
        

            

          //  lineMarker.push(marker);
          markersDeleting.push(marker);
            //var infowindow = new google.maps.InfoWindow({
            //    content: html[iterator],
            //    size: new google.maps.Size(48, 48)
            //});


            //var rotationAngle = 10;
            //google.maps.event.addListenerOnce(map, 'idle', function () {
            //    setInterval(function () {
            //        console.log("transform: rotate(" + rotationAngle + 'deg)'); $('img[src="http://www.geocodezip.com/mapIcons/SO_20170925_multiplePaths_mod.svg"]').css({
            //            'transform': 'rotate(' + rotationAngle + 'deg)',
            //            'transform-origin': '39px 60px'
            //        });
            //        rotationAngle += 10;
            //        rotationAngle %= 360;
            //    }, 1000);
            //});
            google.maps.event.addListener(marker, 'click', function () {
                clearOverlays();
                infowindow.open(map, marker);
                jQuery(marker).hide().fadeIn('slow');

            });
            infoWin.push(infowindow);
        }
        var markerOpacity = markerOpacityIncrement = 0.05;
        var fadeInMarkers = function (markers) {
            
            if (markerOpacity <= 1) {

                for (var i = 0, len = markers.length; i < len; ++i) {
                    markers[i].setOpacity(markerOpacity);
                }

                // increment opacity
                markerOpacity += markerOpacityIncrement;

                // call this method again
                setTimeout(function () {
                    fadeInMarkers(markers);
                }, 50);

            } else {
                markerOpacity = markerOpacityIncrement; // reset for next use
            }

            
        }


        // Sets the map on all markers in the array.
        function setMapOnAll(map) {
            for (var i = 0; i < markersDeleting.length; i++) {
                markersDeleting[i].setMap(map);
            }
        }
        //******************* END ADD MARKER **************************/


        //******************* BEGIN ADD LINE **************************/
        function addLine() {
      
            //check for total way points and stop
            if (iterator < neighborhoods.length) {
                var data = "<div>Playing route...[" + (iterator).toString() + "] Total waypoints:" + neighborhoods.length.toString() + "</div>";
                document.getElementById('playing').innerHTML = data;
            }
            else {
                document.getElementById('playing').innerHTML = "Playback stopped...";

            }
            var end = parseInt(iterator) + 1;
            var flightPlanCoordinates = [
                neighborhoods[iterator], neighborhoods[end]
            ];
            var flightPath = new google.maps.Polyline({
                path: flightPlanCoordinates,
                // strokeColor: "#717d0f",
                strokeColor: "#0080ff",
                //  strokeColor: "yellow",
                // strokeColor: "#ffc200",



                strokeOpacity: 1,
                strokeWeight: 5
            });
         //   flightPath.setMap(map);
          //  $("input[type=range]").val(iterator);
          //  line.push(flightPath);

            if (neighborhoods.length > 100) {

                if (iterator % 5 == 0) {
                    if (sidebar[iterator] == undefined) {

                    }

                    else {
                        //document.getElementById('side_bar').innerHTML = sidebar[iterator] + document.getElementById('side_bar').innerHTML;
                    }

                }
            }
            else {
                if (sidebar[iterator] == undefined) {

                }

                else {
                  //  document.getElementById('side_bar').innerHTML = sidebar[iterator] + document.getElementById('side_bar').innerHTML;
                }
            }
            //document.getElementById('side_bar').innerHTML = sidebar[iterator] + document.getElementById('side_bar').innerHTML;
            iterator++;

            var stoppoint = (neighborhoods.length) - 1;
            var ccc = iterator;

            if (parseInt(ccc) == parseInt(stoppoint)) {

                document.getElementById("playR").style.display = 'block';
                document.getElementById("imgPause").style.display = 'none';
            }

        }
        //******************* END ADD LINE **************************/

        //******************* BEGIN CLEAR MARKERS **************************/
        function clearOverlays() {
            if (infoWin) {
                for (i in infoWin) {
                    infoWin[i].setMap(null);
                }
            }
            if (sideInfoWin) {
                for (i in sideInfoWin) {
                    sideInfoWin[i].setMap(null);
                }
            }
        }
        //******************* END CLEAR MARKERS **************************/

        //******************* BEGIN CHANGE SPEED **************************/
        function changeSpeed() {
            
            clearTimeout(timerA);
            clearTimeout(timerB);
            var theContents = document.getElementById('speed')[document.getElementById('speed').selectedIndex].value;

            timer1 = theContents;
            timer2 = theContents + 100;
            drop();
        }
        //******************* END CHANGE SPEED **************************/

        //******************* BEGIN RE CENTER **************************/
        function reCenter() {
            var bound = new google.maps.LatLngBounds();
            for (var i in gmarkers) {
                bound.extend(gmarkers[i].getPosition());
            }
            map.fitBounds(bound);
            zoomToExtents = 1;
        }
        //******************* END RE CENTER **************************/

        //******************* BEGIN PAUSE **************************/
        function pause() {

            document.getElementById("playR").style.display = 'block';
            document.getElementById("imgPause").style.display = 'none';
            isstooped = 1;

            //for (var i in timersAA) {
            //    clearTimeout(timersAA[i]);
            //}
            //for (var j in timersBB) {
            //    clearTimeout(timersBB[j]);
            //}

            //var arryanew=[]
          

            //google.maps.event.addListenerOnce(map, 'idle', function () {
            //    animateMarker(marker, arryanew);
            //});
        }
        //******************* END PAUSE **************************/

        //******************* BEGIN MY CLICK **************************/
        function myclick(i) {
            var infowindow = new google.maps.InfoWindow(
        {
            content: html[i],
            size: new google.maps.Size(50, 50)
        });

            sideInfoWin.push(infowindow);
            clearOverlays();
            infowindow.open(map, gmarkers[i]);
            setTimeout(function () { $('button.gm-ui-hover-effect img').css('height', 'auto').css('width', 'auto').css('margin','0px'); }, 10);
            
        }
        //******************* END MY CLICK **************************/


        //******************* BEGIN READ DATA **************************/
        function readData() {
         
            var url = window.location.search.substring(1); //get rid of "?" in querystring
            var qArray = url.split('&'); //get key-value pairs
            var tableName = qArray[0].replace('tableName=', '');
            var fromDate = qArray[1].replace('fromDate=', '');
            var toDate = qArray[2].replace('toDate=', '');
            fromDate = fromDate.replace(/%20/g, " ");
            toDate = toDate.replace(/%20/g, " ");
            arry = [];
            $.ajax({
                dataType: "json",
                type: "GET",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                url: apiBase.apiurl + "MapAPI/GetPlayBackDataResult",
                // url: apiBase.apiurl + "MapAPI/RouteWithDirection",


                data: { tableName: tableName, fromDate: fromDate, toDate: toDate },
                //async: true,
                //processData: false,
                //cache: false,
                success: function (data) {
                    
                    markers = data.RouteDataList;
                    if (markers.length == 0) {
                        document.getElementById('startEndPos').innerHTML = "No data available...";
                    }
                    else {
                        $("#slidernew").attr('max', markers.length);
                    }
                    for (var i = 0; i < markers.length; i++) {

                        var dDate = markers[i].dDate;
                        var speed = markers[i].speed;
                        var lat = parseFloat(markers[i].Latitude);
                        var lng = parseFloat(markers[i].Longitude);
                        var point = new google.maps.LatLng(lat, lng);
                        var loc = markers[i].Location;

                        //array to store information for info window

                        var vehname = $('#txtvehname').text();
                        if (i == 0) {
                            html[i] = "<table class='table' style='width:200px;'><tr><td colspan='2'><h4>" + vehname + "</h4></td></tr><tr><td>Speed</td><td> " + speed + "</td></tr><tr><td>DateTime: " + dDate + "</td></tr><tr><td>Start Location</td><td>" + loc + "</td></tr></table>";
                        }
                        else if (i == markers.length - 1) {
                            html[i] = "<table class='table' style='width:200px;'><tr><td colspan='2'><h4>" + vehname + "</h4></td></tr><tr><td>Speed</td><td> " + speed + "</td></tr><tr><td>DateTime: " + dDate + "</td></tr><tr><td>End Location</td><td>" + loc + "</td></tr></table>";

                        }
                        else {
                            html[i] = "<table class='table' style='width:200px;'><tr><td colspan='2'><h4>" + vehname + "</h4></td></tr><tr><td>Speed</td> <td> " + speed + "</td></tr><tr><td>DateTime</td><td> " + dDate + "</td></tr><tr><td>Location</td><td>" + loc + "</td></tr></table>";

                        }

                        neighborhoods[i] = new google.maps.LatLng(lat, lng);
                       
                        arry.push([lat,lng]);
                        icon_type[i] = parseFloat(markers[i].type);

                        //this is for panel start location(right side)
                        if (i == 0) {
                            document.getElementById('startEndPos').innerHTML = '<p><img src="../img/legends/start.GIF"  style="margin:0 !important; padding:0 !important; height: 25px;" ><a href="javascript:myclick(' + i + ')"> ' + loc + '</a> - <span class="date_label">' + dDate + '</p>';
                            var hiddenMarker = new google.maps.Marker({
                                position: neighborhoods[i],
                                map: map,
                                visible: false,
                                draggable: false
                            });
                            gmarkers[i] = hiddenMarker;
                            var reCenter = new google.maps.LatLng(lat, lng);
                            map.setCenter(reCenter);
                        }
                        //this is for panel end location(right side)
                        if (i == markers.length - 1) {
                            document.getElementById('startEndPos').innerHTML += '<p><img src="../img/legends/end.GIF" style="margin:0 !important; padding:0 !important; height: 25px;"><a href="javascript:myclick(' + i + ')">' + loc + '</a> - <span class="date_label">' + dDate + '</p>';
                        }

                        //this is used to hide the marker
                        var hiddenMarker = new google.maps.Marker({
                            position: neighborhoods[i],
                            map: map,
                            visible: false
                        });

                        // add locations to side bar(right side)
                        side_bar_html = '<p><a href="javascript:myclick(' + i + ')">' + loc + '</a> - <span class="date_label">' + dDate + '</p>';
                        sidebar[i] = side_bar_html;
                        gmarkers[i] = hiddenMarker;
                    }

                    //  speedIncrement(0);

                },
                error: function () {
                    
                }

            });




        }
        //******************* END READ DATA **************************/


    </script>

    <script type="text/javascript">
        function copy_data(val) {
            var a = document.getElementById(val.id).value
            document.getElementById("hfValue").value = a
        }
    </script>

    <script type="text/javascript">
        function combofunction(the_value) {
            var sParts = the_value.split(",");
            //   alert(sParts);
            document.getElementById('txtlat').value = sParts[0];
            document.getElementById('txtlon').value = sParts[1];
            //initialize();
            //var sParts = result.split(",");
            var latLong2 = new google.maps.LatLng(sParts[0], sParts[1]);
            //alert(latLong);
            map.setCenter(latLong2);
        }
    </script>

    <!-- Arrow code -->
    <script type="text/javascript">
        var zoomToExtents = 0;
        var map;
        var gmarkersDir1 = new Array();
        var arrow = [];
        for (var k = 0; k <= 117; k = k + 3) {
            // arrow[k] = "../img/Arrows/a.png";


            arrow[k] = "../img/Arrows/dir_" + k + ".png";
        }

        //CarDirection 
        var carDirection = [];
        for (var k = 0; k <= 117; k = k + 1) {
            // arrow[k] = "../img/Arrows/a.png";


            carDirection[k] = "../img/arrow2/dir_" + k + ".png";
        }


        // Returns the icon object
        function addIcon(file) {
            var g = google.maps;
            var icon = new g.MarkerImage(file,
    new g.Size(24, 24), null, new g.Point(12, 12));
            return icon;
        }
        var setArrows = {

            // Creates markersDir with corresponding triangle icons
            create: function (p1, p2, mode) {
              
                var markerpos;
                var g = google.maps;
                if (mode == "onset") markerpos = p1;
                else if (mode == "head") markerpos = p2;
                else if (mode == "midline") markerpos = g.geometry.spherical.interpolate(p1, p2, .5);

                // Compute the bearing of the line in degrees
                var dir = g.geometry.spherical.computeHeading(p1, p2).toFixed(1);
                // round it to a multiple of 3 and correct unusable numbers
                dir = Math.round(dir / 3) * 3;
                if (dir < 0) dir += 240;
                if (dir > 117) dir -= 120;
                // use the corresponding icon
                //images/Arrows/dir_" + dir + ".png
                var icon = addIcon(arrow[dir]);
                //new g.Marker({
                //    position: markerpos,
                //    map: map, icon: icon, clickable: false
                //});

            },

            calc: function (points, sp, mode) {
                var p1, p2;
                // 'Head' arrow will only appear at the last line point
                if (mode == "head") {
                    p1 = points[points.length - 1];
                    p2 = points[points.length - 2];
                    this.create(p1, p2, mode);
                }
                else {
                  
                    for (var i = 0; i < points.length - 1; i = i + 10) {
                        p1 = points[i];
                        p2 = points[i + 1];
                        if (sp[i] > 2) {
                            this.create(p1, p2, mode);
                        }
                    }
                }
            }
        }

        // Draws a polyline with accordant arrow heads
        function createPoly(markpoint, sp, mode, speed,overspeed) {
           
     


            var color = "black";
            for (var k = 0; k < markpoint.length; k++) {


                if (k == 0) {

                    var myLatlng = new google.maps.LatLng(markpoint[k].lat(), markpoint[k].lng());
                    image = "../img/legends/start1.gif"//icons[1];

                    var marker = new google.maps.Marker({
                        position: myLatlng,
                        map: map,
                        draggable: false,
                        icon: image
                    });

                }
                if (k == ((markpoint.length)-1)) {
                    var myLatlngend = new google.maps.LatLng(markpoint[k].lat(), markpoint[k].lng());
                    image = "../img/legends/end.gif"//icons[1];

                    var marker = new google.maps.Marker({
                        position: myLatlngend,
                        map: map,
                        draggable: false,
                        icon: image
                    });

                }


              if (k > 0) {
                  var locationlinks= [
           new google.maps.LatLng(markpoint[k-1].lat(), markpoint[k-1].lng()),
           new google.maps.LatLng(markpoint[k].lat(), markpoint[k].lng())
                   ];
                  if (parseInt(speed[k]) > parseInt(overspeed[k])) {
                      color = "red";
                  }
                  else {
                      color = "black";
                  }
            var iconsetngs = {
                path: google.maps.SymbolPath.FORWARD_CLOSED_ARROW
            };
            var poly = new google.maps.Polyline({
                strokeColor: color,
                strokeOpacity: 0.8,
                strokeWeight: 2,
                map: map,
                path: locationlinks,
                icons: [{
                    icon: iconsetngs,
                   
                }]
            });



            google.maps.event.addListener(poly, 'click', (function (poly, k) {
                return function () {
                         var infowindow = new google.maps.InfoWindow(
                    {
                        content: html[k-1],
                        size: new google.maps.Size(50, 50)
                    });

                         sideInfoWin.push(infowindow);
                         clearOverlays();
                         infowindow.open(map, gmarkers[k-1]);
                         setTimeout(function () { $('button.gm-ui-hover-effect img').css('height', 'auto').css('width', 'auto').css('margin', '0px'); }, 10);

                };
            })(poly, k)
            );


            google.maps.event.addListener(poly, 'mouseover', (function (poly, k) {
                return function () {
                    var infowindow = new google.maps.InfoWindow(
               {
                   content: html[k - 1],
                   size: new google.maps.Size(50, 50)
               });

                    sideInfoWin.push(infowindow);
                    clearOverlays();
                    infowindow.open(map, gmarkers[k - 1]);
                    setTimeout(function () { $('button.gm-ui-hover-effect img').css('height', 'auto').css('width', 'auto').css('margin', '0px'); }, 10);

                };
            })(poly, k)
                    );

            



            //locationlinks = null;
                }
            }
        }

       




        //Function in OnLoad for route with Direction

        ///for arrow
        var xmlhttp = null;
        var lat = "";
        var lng = "";
        var lat1;
        var lng1;
        var dist;
        var latipt;
        var lngipt;
        var veh;
        var acg;
        var spd;
        var dt;
        var typ;
        var sp = [];
        var image;
        var loct;
        var xmlDoc;
        var icons = [];
        var infowindow1;
        var points1 = [];
        var info;
        var xDoc;
        var dist;
        var stopp;
        var markersDir = new Array();
        function RouteWithDirection() {
            var bType = navigator.appName;
            icons[1] = "../img/legends/moving.png";
            icons[2] = "../img/legends/stop.png";
            icons[3] = "../img/legends/towed.png";  //GreenIcon;   // Moving
            icons[4] = "../img/legends/start.GIF";  //ErrorIcon;   // Unknown (Moving without Ignition On)
            icons[5] = "../img/legends/unreach.png";
            icons[6] = "../img/legends/end.gif";

            if (window.XMLHttpRequest) {// code for IE7+, Firefox, Chrome, Opera, Safari
                xmlhttp = new XMLHttpRequest();
            }
            else {// code for IE6, IE5
                xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
            }
            var latlng;

            var tableName = localStorage.getItem("tableName");
            var fromDate = localStorage.getItem("fromDate");
            var toDate = localStorage.getItem("toDate");
            var vehicleName = localStorage.getItem("vehicleName");


            fromDate = fromDate.replace(/%20/g, " ");
            toDate = toDate.replace(/%20/g, " ");
            $.ajax({
                //  dataType: "json",
                type: "GET",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                url: apiBase.apiurl + "MapAPI/RouteWithDirection",
                data: { tableName: tableName, fromDate: fromDate, toDate: toDate, vehicleName: vehicleName },
                success: function (data) {
                    
                    xmlDoc = $.parseXML(data);

                    var vehno = xmlDoc.getElementsByTagName("vehno");
                    var date = xmlDoc.getElementsByTagName("datadate");
                    var speed = xmlDoc.getElementsByTagName("speed");
                    var loc = xmlDoc.getElementsByTagName("location");
                    var acignition = xmlDoc.getElementsByTagName("acignition");
                    var lati = xmlDoc.getElementsByTagName("rowlat");
                    var longi = xmlDoc.getElementsByTagName("rowlng");
                    var type = xmlDoc.getElementsByTagName("Type");
                    var distance = xmlDoc.getElementsByTagName("distance");
                    var Overspeed = xmlDoc.getElementsByTagName("overspeed");
                    
                  
                    lat = lati[0].childNodes[0].nodeValue;
                    lng = longi[0].childNodes[0].nodeValue;

                    var latlng1 = new google.maps.LatLng(lat, lng);

                    var myOptions =
                    {
                        zoom: 10,
                        center: latlng1,

                        mapTypeId: google.maps.MapTypeId.ROADMAP,
                        zoomControlOptions: {
                            position: google.maps.ControlPosition.LEFT_CENTER
                        }
                    };

                    map2 = new google.maps.Map(document.getElementById("map_canvas2"), myOptions);
                    document.getElementById("map_canvas2").style.backgroundImage = "url(../img/515-500loading.jpg)";

                    function createMarkerForDireciton(image, latlng1, info) {
                        var marker1 = new google.maps.Marker({
                            position: latlng1,
                            map: map2,
                            icon: image,
                            html: info
                        });
                        infowindow1 = new google.maps.InfoWindow({
                            content: "holding....",
                            size: new google.maps.Size(50, 50)
                        });
                        google.maps.event.addListener(marker1, 'mouseover', function () {
                            infowindow1.setContent(this.html);
                            infowindow1.open(map, this);
                        });
                        gmarkersDir1.push(marker1);
                    }
                    // Draw Line
                    var a = 0;
                    var latpt = xmlDoc.getElementsByTagName("latpt");
                    var lngpt = xmlDoc.getElementsByTagName("lngpt");
                    var speedy = xmlDoc.getElementsByTagName("speedy");
                    var speed = [];
                    var overspeed = [];
                    for (var j = 0; j <= (latpt.length - 1) ; j++) {
                        latipt = latpt[j].childNodes[0].nodeValue;
                        lngipt = lngpt[j].childNodes[0].nodeValue;
                        sp[j] = speedy[j].childNodes[0].nodeValue;
                        speed[j] = speedy[j].childNodes[0].nodeValue;
                        overspeed[j]= Overspeed[j].childNodes[0].nodeValue
                        points1[j] = new google.maps.LatLng(latipt, lngipt);
                    }
                    createPoly(points1, sp, "midline", speed,overspeed);

                    // Draw markersDir 
                    for (var i = 0; i <= (lati.length - 1) ; i++) {

                       
                       
                        veh = vehno[i].childNodes[0].nodeValue;
                        spd = speed[i].childNodes[0].nodeValue;
                        dt = date[i].childNodes[0].nodeValue;
                        loct = loc[i].childNodes[0].nodeValue;
                        acg = acignition[i].childNodes[0].nodeValue;
                        lat1 = lati[i].childNodes[0].nodeValue;
                        lng1 = longi[i].childNodes[0].nodeValue;
                        typ = type[i].childNodes[0].nodeValue;
                        dist = distance[i].childNodes[0].nodeValue;
                        //stopp = stoppage[i].childNodes[0].nodeValue;

                        var latlng1 = new google.maps.LatLng(lat1, lng1);
                        map2.setCenter(latlng1);
                        info = "<div class='veh_label'><table class='table' style='width:230px;'><tr><td>Vehicle No</td><td> " + veh + "</td></tr><tr><td>speed</td><td> " + spd + "</td></tr><tr><td>DateTime</td><td>" + dt + "</td></tr><tr><td>Location</td><td>" + loct + "</td></tr><tr><td>Distance</td><td>" + dist + " km" + "</td></tr></table></div>";
                        //for start position
                        if (typ == 1) {
                            image = icons[1];



                            markersDir = createMarkerForDireciton(image, latlng1, info);
                            a = 0;

                        }
                        //in between start position
                        if (typ == 3) {
                            image = icons[3];
                            markersDir = createMarkerForDireciton(image, latlng1, info);
                            a = 0;
                        }
                            //for end position
                        else if (typ == 6) {
                            image = icons[6];
                            markersDir = createMarkerForDireciton(image, latlng1, info);
                            a = 0;
                        }
                        else {
                        }

                    }
                    var bound = new google.maps.LatLngBounds();
                    for (var i in gmarkersDir1) {
                        bound.extend(gmarkersDir1[i].getPosition());
                        if (i == 0) {
                            map.setCenter(gmarkersDir1[i].getPosition());
                        }
                    }
                    map.fitBounds(bound);
                }

            });

        }
        //End of route with direction funtion


    </script>

    <!-- POI CODE -->
    <script type="text/javascript">
        function PointOfInterest() {

            //var fluster = new Fluster2(map);
            var custid = getUrlParameter("custid");
            var vehicleName = localStorage.getItem("tableName");
            var url = apiBase.apiurl + "MapAPI/POIbyBBID";
          
            $.ajax({
                url: url,
                dataType: "json",
                type: "GET",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                data: "custId=" + custid + "&bbid=" + vehicleName,

                async: true,
                processData: false,
                cache: false,

                success: function (data) {

                    for (var i = 0; i < data.length; i++) {
                        var lat = parseFloat(data[i].lat);
                        var lng = parseFloat(data[i].lng);
                        var details = data[i].details;
                        var marker = new google.maps.Marker
                        ({
                            position: new google.maps.LatLng(lat, lng),
                            draggable: false,
                            map: map,
                            label:{
                                text:details
                            }
                        //    labelContent: "<div class='arrow'></div><div class='inner'>"+details+"</div>",
                        //labelAnchor: new google.maps.Point(0, 0),
                        //labelClass: "labels", 
                        //isClicked: false

                          //  label: details,
                            //raiseOnDrag: true,
                            //labelContent: details,
                            //labelAnchor: new google.maps.Point(3, 30),
                            //labelClass: "labels", // the CSS class for the label
                            //labelInBackground: false
                      
                        });
                       
                        //var label = new Label(
                        //{
                        //    draggable: false,
                        //    map: map
                        //});
                        //label.bindTo('position', marker, 'position');
                        //label.set('text', details);
                        gmarkers.push(marker);

                          google.maps.event.addListener(marker, 'click', function() {
        marker.isClicked = true;
        marker.set('labelClass', 'labels active');
    });
    google.maps.event.addListener(marker, 'mouseover', function() {
        marker.set('labelClass', 'labels hover');
    });
    google.maps.event.addListener(marker, 'mouseout', function() {
        if (marker.isClicked){
            marker.set('labelClass', 'labels active');
        } else {
            marker.set('labelClass', 'labels');
        }
    });
                    }

                    var bound = new google.maps.LatLngBounds();
                    for (var i in gmarkers) {
                        bound.extend(gmarkers[i].getPosition());
                        if (i == 0) {
                            map.setCenter(gmarkers[i].getPosition());
                        }
                    }
                    map.fitBounds(bound);
                },
                error: function (xhr, textStatus, errorThrown) {

                    alert("error");
                }
            });

        };
    </script>

   <!-- GEOFENCE CODE -->
    <script type="text/javascript">

        function GeoFence(value) {

            var theFence;
            var triangleCoords = new Array();
            $.ajax({

                type: "GET",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                url: apiBase.apiurl + "GeofenceAPI/GetGeoOutPut?bbid=" + value,

                success: function (data) {

                    xmlDoc = (new DOMParser()).parseFromString(data, "text/xml")
                    //  xmlDoc =  $.parseXML(data);
                    var markers = xmlDoc.documentElement.getElementsByTagName("marker");

                    if (markers.length > 0) {
                        var fenceName = markers[0].getAttribute("fenceName");
                        $("#fenceName").html(fenceName);
                        BoxID = markers[0].getAttribute("bbid");
                        $("#trAlertMessage").removeClass("hidden");
                        document.getElementById('resultPanel').innerHTML = '<div class="success"><span style="color:grey;">Fence Name: </span>' + fenceName + "</div>";
                    }


                    var cords = [];
                    var cc = [];
                    var id = markers[0].getAttribute("FenceId");
                    for (var i = 0; i < markers.length; i++) {
                        var lat = parseFloat(markers[i].getAttribute("lat"));
                        var lng = parseFloat(markers[i].getAttribute("lng"));
                        var FenceId = parseInt(markers[i].getAttribute("FenceId"));
                        //..........................................................
                        var c = new google.maps.LatLng(lat, lng);
                        if (FenceId != id || i == markers.length - 1) {
                            if (i == markers.length - 1) cc.push(c);
                            cords.push(cc);
                            cc = [];
                            id = FenceId;
                        }
                        cc.push(c);
                        triangleCoords[i] = new google.maps.LatLng(lat, lng);
                        if (i == 1) {
                            var reCenter = new google.maps.LatLng(lat, lng);
                            map.setCenter(reCenter);
                        }
                    }
                    for (var i = 0; i < cords.length; i++) {
                        theFence = new google.maps.Polygon({
                            paths: cords[i],
                            strokeColor: "#FF0000",
                            strokeOpacity: 0.6,
                            strokeWeight: 2,
                            fillColor: "#FF0000",
                            fillOpacity: 0.35
                        });
                        theFence.setMap(map);
                    }
                }
            });


        }

    </script>

   <!-- Code For Halts(Stops) -->
    <script type="text/javascript">
        //var zoomToExtents = 0;
        var map3;
        var gmarkersWithStoppages = new Array();

        // Create the map
        var xmlhttp = null;
        var lat = "";
        var lng = "";
        var lat1;
        var lng1;
        var latipt;
        var lngipt;
        var veh;
        var acg;
        var spd;
        var dt;
        var typ;
        var sp = [];
        var image;
        var loct;
        var xmlDoc;
        var icons = [];
        var infowindow;
        var points = [];
        var info;
        var xDoc;
        var dist;
        var stopp;
        var markersWithStoppages = new Array();
        var bType = navigator.appName;
        icons[1] = "../img/legends/moving.png";
        icons[2] = "../img/legends/stop.png";
        icons[3] = "../img/legends/towed.png";  //GreenIcon;   // Moving
        icons[4] = "../img/legends/start.GIF";  //ErrorIcon;   // Unknown (Moving without Ignition On)
        icons[5] = "../img/legends/unreach.png";
        icons[6] = "../img/legends/end.gif";
        icons[7] = "../img/legends/ignion.png";

        if (window.XMLHttpRequest) {// code for IE7+, Firefox, Chrome, Opera, Safari
            xmlhttp = new XMLHttpRequest();
        }
        else {// code for IE6, IE5
            xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
        }
        var latlng;

        var tableName = localStorage.getItem("tableName");
        var fromDate = localStorage.getItem("fromDate");
        var toDate = localStorage.getItem("toDate");

        fromDate = fromDate.replace(/%20/g, " ");
        toDate = toDate.replace(/%20/g, " ");
        function StopHalts() {
            $.ajax({
                //  dataType: "json",
                type: "GET",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                url: apiBase.apiurl + "MapAPI/RouteHaltsData",
                data: { tableName: tableName, fromDate: fromDate, toDate: toDate },
                success: function (data) {
                  
                    xmlDoc = $.parseXML(data);
                    if (xmlDoc == null || xmlDoc != "undefined") {
                        var vehno = xmlDoc.getElementsByTagName("vehno");
                        var sdate = xmlDoc.getElementsByTagName("sdate");
                        var edate = xmlDoc.getElementsByTagName("edate");
                        var loc = xmlDoc.getElementsByTagName("location");
                        var lati = xmlDoc.getElementsByTagName("rowlat");
                        var longi = xmlDoc.getElementsByTagName("rowlng");
                        var type = xmlDoc.getElementsByTagName("Type");
                    
                        
                        var distance = xmlDoc.getElementsByTagName("distance");
                        var stoppage = xmlDoc.getElementsByTagName("stoppage");
                        var myZoomTag = xmlDoc.getElementsByTagName("myZoom");

                        var latlng;

                        lat = lati[0].childNodes[0].nodeValue;
                        lng = longi[0].childNodes[0].nodeValue;
                        var myZoom = parseInt(myZoomTag[0].childNodes[0].nodeValue);

                        var myOptions =
                        {
                            zoom: myZoom,
                            center: latlng,
                            mapTypeId: google.maps.MapTypeId.ROADMAP,
                            zoomControlOptions: {
                                position: google.maps.ControlPosition.LEFT_CENTER
                            },
                        };

                        map3 = new google.maps.Map(document.getElementById("map_canvas3"), myOptions);
                        document.getElementById("map_canvas3").style.backgroundImage = "url(../img/515-500loading.jpg)";
                    }


                    // Create Marker
                    function createMarkerForStoppages(image, latlng1, info) {
                        var marker = new google.maps.Marker({
                            position: latlng1,
                            map: map,
                            icon: image,
                            html: info
                        });
                        infowindow = new google.maps.InfoWindow({
                            content: "holding....",
                            size: new google.maps.Size(50, 50)
                        });
                        google.maps.event.addListener(marker, 'mouseover', function () {
                            infowindow.setContent(this.html);
                            infowindow.open(map, this);
                        });
                        gmarkersWithStoppages.push(marker);
                    }
                    var a = 0;
                    var df
                    // Draw Stoppage Points
                    for (var i = 0; i <= (lati.length - 1) ; i++) {
                       
                        veh = vehno[i].childNodes[0].nodeValue;
                        sdt = sdate[i].childNodes[0].nodeValue;
                        edt = edate[i].childNodes[0].nodeValue;
                        loct = loc[i].childNodes[0].nodeValue;
                        loct = loc[i].childNodes[0].nodeValue;
                        lat1 = lati[i].childNodes[0].nodeValue;
                        lng1 = longi[i].childNodes[0].nodeValue;
                        typ = type[i].childNodes[0].nodeValue;
                        if (i == 0) {
                            df = 0;
                        }
                        else {
                            df = parseFloat(distance[i].childNodes[0].nodeValue) - parseFloat(distance[0].childNodes[0].nodeValue);
                           df = Math.round(df);
                        }
                      
                        stopp = stoppage[i].childNodes[0].nodeValue;

                        var latlng1 = new google.maps.LatLng(lat1, lng1);
                        map3.setCenter(latlng1);
                        info = "<div class='veh_label'><table class='table' style='width:230px;'><tr><td>Vehicle No</td><td>" + veh + "</td></tr><tr><td>Stoppage Start Time</td><td> " + sdt + "</td></tr><tr><td>Stoppage End Time</td> <td>" + edt + "</td></tr><tr><td>Stoppage Duration</td><td> " + stopp + "</td></tr><tr><td>Location</td><td>" + loct + "</td></tr><tr><td>Distance</td><td>" + df + "KM</td></tr></table></div>";

                        if (typ == 1) {
                            image = icons[1];
                            markersWithStoppages = createMarkerForStoppages(image, latlng1, info);
                            a = 0;

                        }
                        else if (typ == 2 & a == 0) {
                            image = icons[2];
                            markersWithStoppages = createMarkerForStoppages(image, latlng1, info);
                            a = 0;
                        }
                        else if (typ == 3) {
                            image = icons[3];
                            markersWithStoppages = createMarkerForStoppages(image, latlng1, info);
                            a = 0;
                        }
                        else if (typ == 4) {
                            image = icons[4];
                            markersWithStoppages = createMarkerForStoppages(image, latlng1, info);
                            a = 0;
                        }
                        else if (typ == 5) {
                            image = icons[5];
                            markersWithStoppages = createMarkerForStoppages(image, latlng1, info);
                            a = 0;
                        }
                        else if (typ == 6) {
                            image = icons[6];
                            markersWithStoppages = createMarkerForStoppages(image, latlng1, info);
                            a = 0;
                        }
                        else if (typ == 7) {
                            image = icons[7];
                            markersWithStoppages = createMarkerForStoppages(image, latlng1, info);
                            a = 0;
                        }
                        else
                        {
                        }
                    }

                    if (gmarkersWithStoppages.length > 1) {
                        var bound = new google.maps.LatLngBounds();
                        for (var i in gmarkersWithStoppages) {
                            bound.extend(gmarkersWithStoppages[i].getPosition());
                            if (i == 0) {
                                map3.setCenter(gmarkersWithStoppages[i].getPosition());
                            }
                        }
                        map3.fitBounds(bound);
                        //   map3.zoomToMaxExtent();
                    }

                }
            });
        }
    </script>

</head>



<body onload="javascript:initialize();">
    <noscript>
        <b>JavaScript must be enabled in order for you to use Google Maps.</b> However,
        it seems JavaScript is either disabled or not supported by your browser. To view
        Google Maps, enable JavaScript by changing your browser options, and then try again.
    </noscript>

  
    <div class="col-md-12" id="txtvehicle" style="visibility:hidden;display:none;">

                                      <div class="col-md-3">
                                         <img src="http://trackmaster.in/images/blackbox-logo-2.png" />
                                        </div>
                                    <div class="col-md-3">
                                      <span style="font-size:16px; font-weight:bold;">  Vehicle No: <b id="txtname"></b>   </span> 
                                   <br />
                                        <span style="font-size:16px; font-weight:bold;"> Distance Covered No: <b id="txtdist"></b>   </span> 
                                        <br />
                                        <span style="font-size:16px; font-weight:bold;"> Stoppage  Duration: <b id="txtstpg"></b>   </span> 
                                        <br />
                                        <span style="font-size:16px; font-weight:bold;"> Driving  Duration: <b id="txtdrv"></b>   </span> 
                                    </div>
                                   
                                    <div class="col-md-3">
                                        <span style="font-size:16px; font-weight:bold;">  Report Date: <b id="txtdate"></b>   </span>  
                                        </div>
                              
         
                                </div>

    <div id="map_canvas" class="hidden-print" style="width: 100%; height: 600px; float: left;">
        Loading map...
    </div>
    <div id="map_canvas2" class="hidden-print" style="width: 100%; height: 600px; float: left;">
        Loading map...
    </div>
    <div id="map_canvas3" style="width: 100%; height: 600px; float: left;">
        Loading map...
    </div>



    <div class="Dpanel" style="margin-top: -35px; float: left; visibility: hidden;">
        <div id="Div1" style="height: 32px; overflow: auto;">
                        
            <p>
                Show POI
                        <input type="checkbox" id="checkPOI" onclick="PointOfInterest()" />
            </p>
        </div>
    </div>
    <div class="panelnew" id="playbackdetails" style="display:none;">
        <table width="310px" cellpadding="0" cellspacing="0" class="table">

            <tr>
                <th>
                    Vehicle play back Details
                </th>
            </tr>


            <tr>
                <td colspan="3" style="padding: 3px;">
                    <div id="side_bar" style="height: 410px; width: 92% !important; overflow: auto; margin: 5px">
                    </div>
                </td>
            </tr>
        </table>
    </div>

    <div class="panel" id="divPanel">

            <table style="margin-bottom: 10px; width:100%">
              <tr>
             <td style="font-size:20px; text-align:center;padding-bottom: 10px;"><b><span id="txtvehname"></span></b><br /></td>
            </tr>
            <tr>
             <td style="font-size:12px; text-align:center;padding-bottom: 10px"><span id="txtfromdate"></span> <b style="color:black; font-size:16px">To</b> <span id="txttodate"></span></td>
            </tr>
        </table>
        <table width="310px" cellpadding="0" cellspacing="0">
                        <tr  id="trAlertMessage" class="hidden"><th colspan="3"><p id="resultPanel"></p> </th></tr>
            <tr>
                <th>Fence:<br />
                    <input type="checkbox" id="tglShowHideFence"  data-height="15" data-toggle="toggle" data-on="Show" data-off="Hide" data-size="mini" data-onstyle="success" data-offstyle="danger"></th>
                <th style="padding-left: 10%;">POIs:
                    <br />
                    <input type="checkbox" id="tglShowHidePOI" data-height="15" data-toggle="toggle" data-on="Show" data-off="Hide" data-size="mini" data-onstyle="success" data-offstyle="danger">
                </th>
                <th>Stops: 
                    <br />
                    <input type="checkbox" id="tglShowHideHalts" data-height="15" data-toggle="toggle" data-on="Show" data-off="Hide" data-size="mini" data-onstyle="success" data-offstyle="danger"></th>
            </tr>
   
            <tr>
                <td style="height: 25px; padding: 10px 10px 5px 10px; width: 40px;">
                    <img id="playR" alt="Play Route" height="40px !important;" src="../Content/map/play.png" onclick="javascript:drop();"
                        style="cursor: pointer;" />
                    <img alt="Pause" id="imgPause" height="37px !important;" src="../Content/map/pause.jpg" onclick="javascript:pause();"
                        style="cursor: pointer; display: none;" />
                </td>
                <td style="height: 25px!important;" colspan="2">
                    <div class="btn-group">
                      <button type="button" class="btn btn-success btn-round btn-small btnSpeedChange btn-radius"  value="700">1X</button>&nbsp;
                      <button type="button" class="btn btn-success btn-round btn-small btnSpeedChange btn-radius" value="500" style="margin-left: 2px;" >2X</button>&nbsp;
                        <button type="button" class="btn btn-success btn-round btn-small btnSpeedChange btn-radius" value="200" style="margin-left: 2px;">3X</button>&nbsp;
                        <button type="button" class="btn btn-success btn-round btn-small  btnSpeedChange btn-radius" value="50" style="margin-left: 2px;">4X</button>&nbsp;
                        <br />

                        <button type="button" class="btn btn-success btn-round btn-small  btnSpeedChange btn-radius" value="6000" style="    margin-left: -143px;
    margin-top: 5px;">5X</button>&nbsp;
                        <button type="button" class="btn btn-success btn-round btn-small  btnSpeedChange btn-radius" value="7000" style="    margin-left: -106px;
    margin-top: 5px;">
                            6X
                        </button>&nbsp;
                        <button type="button" class="btn btn-success btn-round btn-small  btnSpeedChange btn-radius" value="15000" style="    margin-left: -69px;
    margin-top: 5px;">
                            7X
                        </button>&nbsp;
                        <button type="button" class="btn btn-success btn-round btn-small  btnSpeedChange btn-radius" value="20000" style="    margin-left: 2px;
    margin-top: 10px;">
                            8X
                        </button>&nbsp;
                        <button type="button" class="btn btn-success btn-round btn-small  btnSpeedChange btn-radius" value="55000" style="    margin-left: 2px;
    margin-top: 10px;">
                            9X
                        </button>&nbsp;
                        <button type="button" class="btn btn-success btn-round btn-small  btnSpeedChange btn-radius" value="80000" style="    margin-left: 2px;
    margin-top: 10px;">
                            10X
                        </button>&nbsp;
                        
</div>

                </td>


            </tr>
            <tr>
                <td colspan="3" style="padding-bottom: 20px;">

                    <input type="range" class="" name="slidernew" id="slidernew" value="0" min="0" max="100" style="width:280px;margin-top:10px;" />
                    <input type="range" class="ps7" name="slidermove" id="slidermove" value="0" min="0" max="100" style="width:280px;margin-top:10px;display:none" />
                </td>
            </tr>
            <tr ><td colspan="1"  >
                    <button class="btn btn-default" onclick="printMap();">Print</button>
                </td>
                <td colspan="2" >
                    <button class="btn btn-default btn-block" style="width: 88% !important;" onclick="exportToExcel();">Export to Excel</button>
                </td>
            </tr>
            <tr>
                <td style="text-align: left;" colspan="3">
                    <span id="playing" style="color: Green"></span><span id="Span1" style="color: Green"></span>
                </td>
            </tr>
            <tr>
                <td colspan="3" style="height: 25px; padding: 16px 15px 5px 10px; text-align: left; border-bottom: solid 1px #c1c1c1;">
                    <div id="startEndPos">
                    </div>
                </td>
            </tr>
          

              

                <tr>
                    <td colspan="3" style="padding: 3px;">
                        <div id="side_bar" style="height: 129px;width:92% !important; overflow: auto;margin:5px">
                        </div>
                    </td>
                </tr>
       
        </table>
    </div>
    <a class="trigger" href="#">Route Playback</a>
   <a class="trigger1" id="rpb" href="#">Route Playback Details</a>
    <div style="clear: both;">
    </div>
    <script type="text/javascript">
        $(document).ready(function () {
            $(".trigger").click(function () {
                $(".panel").toggle("fast");
                $(this).toggleClass("active");
                return false;
            });

            $(".trigger1").click(function () {
                $(".panelnew").toggle("fast");
                $(this).toggleClass("active");
                return false;
            });
        });

   

        function printMap() {
            $('link[rel=stylesheet][href~="../Content/css/CssCustom.css"]').remove();


         
            $('#txtdist').text(localStorage.getItem("Dist"));
            $('#txtstpg').text(localStorage.getItem("stoppage"));
            $('#txtdrv').text(localStorage.getItem("drv"));
            document.getElementById('txtvehicle').style.visibility = 'visible';
            document.getElementById('txtvehicle').style.display = 'block';
            document.getElementById('map_canvas2').style.visibility = 'hidden';
            document.getElementById('divPanel').style.visibility = 'hidden';
            document.getElementById('rpb').style.display = 'none';
            window.print();
            document.getElementById('txtvehicle').style.visibility = 'hidden';
            document.getElementById('txtvehicle').style.display = 'none';
            document.getElementById('rpb').style.display = 'block';
            location.reload(true);
        };

        //for excel
        function exportToExcel() {
            var tableName = getUrlParameter("tableName");
            var fromDate = getUrlParameter("fromDate");
            var toDate = getUrlParameter("toDate");
            var reportname = "RoutePlayBack" + "_" + fromDate + "_To_" + toDate + "_of_" + localStorage.getItem("vehicleName") + "";
            var url1 = apiBase.apiurl + "MapAPI/GetPlayBackExcelResult?tableName=" + tableName + "&fromDate=" + fromDate + "&toDate=" + toDate + "&downloadType=Excel&reportName=" + reportname + "";


            window.location = url1;
        };

        function speedIncrement(speed) {
            
            //for (var j in timersBB) {
            //    clearTimeout(timersBB[j]);
            //}


            //timer1 = speed;


            //for (var i = 0; i < neighborhoods.length; i++) {
            //    if (i == 0) {


            //    }
            //    else if (i == neighborhoods.length - 1) {
            //        //$("#playR").show();
            //    }
            //    timerB = setTimeout(function () {
            //       // addMarker(neighborhoods.length);
            //       addLine();
            //    }, i * timer1);
            //    timersBB.push(timerB);
            //}


         //   var marker = new google.maps.Marker({
         //       position: new google.maps.LatLng(arry[target][0], arry[target][1]),
           //     map: map,
                //icon: icon,
          //      icon: 'http://maps.google.com/mapfiles/ms/icons/green-dot.png'
          //  });


          
            if (speed ==700)
            {
                kmperhr =parseInt(300);

            }
            else if (speed == 500)
            {
                kmperhr =parseInt(700);

            }
            else if (speed == 200) {
                kmperhr = parseInt(2000);

            }
            else if (speed == 50) {
                kmperhr = parseInt(5000);

            }
            else
            {
                kmperhr = parseInt(speed);
            }


     //       google.maps.event.addListenerOnce(map, 'idle', function () {
          //      animateMarker(marker, arry);
         ////   });
        }

        $(".btnSpeedChange").click(function () {
            speedIncrement(parseInt(this.value));


        });

    </script>
    <script type="text/javascript">
        //for show and hide fence
        $(function () {
            $('#tglShowHideFence').change(function () {
                if ($(this).prop('checked')) {
                    var value = getUrlParameter("tableName");
                    GeoFence(value);
                } else {
                    $("#trAlertMessage").addClass("hidden");
                    initialize();
                    iterator = 0;
                    line = [];
                    $("#slidernew").trigger('change');
                }
            })
            $('#tglShowHidePOI').change(function () {
                if ($(this).prop('checked')) {
                    PointOfInterest();
                } else {
                    initialize();
                    iterator = 0;
                    line = [];
                    $("#slidernew").trigger('change');
                }
            });
            $('#tglShowHideHalts').change(function () {
                if ($(this).prop('checked')) {
                    StopHalts();
                } else {
                    initialize();
                    iterator = 0;
                    line = [];
                    $("#slidernew").trigger('change');
                }
            });

        });

        $(document).ready(function () {
            $("#slidernew").change(function () {


               // 
              //  var newv = $(this).val();
               pause();


            if (target==0)
            {
                target = $(this).val();
                marker = new google.maps.Marker({
                    position: new google.maps.LatLng(neighborhoods[target].lat(), neighborhoods[target].lng()),
                    map: map,
                    // icon: icon,
                    icon: 'http://trackmaster.in/images/truckmove.png'
                });

              
               kmperhr = 500;
               google.maps.event.addListenerOnce(map, 'idle', function () {
                   animateMarker(marker, neighborhoods);
               });
            }
            else
        {
                target = $(this).val();
        }
              

               var reCenter = new google.maps.LatLng(neighborhoods[target].lat(), neighborhoods[target].lng());

            //   marker.setPosition(reCenter);

               map.setCenter(reCenter);
              

            });
        });

    </script>
</body>
</html>
