<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>Location on Map</title>

    <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
    <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
    <!-- Map css -->
    <link href="../Content/MapCSS/Map/LocationOnmapCSS/map.css" rel="stylesheet" />
    <link href="../Content/MapCSS/Map/LocationOnmapCSS/mapstyle.css" rel="stylesheet" />
    
    <!-- Map has been localized to show the names, wherever available in ENGLISH (en) and country/region as INDIA -->
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCdsMp_TiMpmLDoDw8jtVSKMvpiSBAY1EY" language="javascript"
        type="text/javascript"></script>
    <script src="../Content/map/LocationOnMap/label.js"   type="text/javascript"></script>
    <script src="../Content/map/LocationOnMap/Fluster2.packed.js"   type="text/javascript"></script>
    <script src="../Content/js/APIURL.js" type="text/javascript"></script>
   
    
    <!-- Initialize timer script -->
    <script language="JavaScript" type="text/javascript">
        var timerID = null;
        var timerRunning = false;
        var delay = 20000;
        var zoomToExtents = 0;
        var openedInfoWindow = null;
        function initializeTimer() {
            //zoomToExtents = 0;
            initializeMap();
            if (document.getElementById("checkPOI").checked == true) {
                PointOfInterest();
                //alert('true');
            }
            else {
                //alert('false');
            }
            StopTheClock();
         //   document.getElementById('side_bar').innerHTML = "Loading vehicles...";
            StartTheTimer();
        }
        function StopTheClock() {
            if (timerRunning)
                clearTimeout(timerID)
            timerRunning = false;
        }
        function StartTracking() {
            StartTheTimer();
        }
        function StartTheTimer() {
            readMapData();
            timerRunning = true;
            timerID = self.setTimeout("StartTracking()", delay)
        }
        function reCenter() {
            var bound = new google.maps.LatLngBounds();
            for (var i in gmarkers) {
                bound.extend(gmarkers[i].getPosition());
            }
            //map.fitBounds(bound);
            //zoomToExtents = 1;
        }

        // ================ read mapData ================
        function readMapData() {
            debugger;
            if (window.XMLHttpRequest) {// code for IE7+, Firefox, Chrome, Opera, Safari
                xmlhttp = new XMLHttpRequest();
            }
            else {// code for IE6, IE5
                xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
            }
            //xmlhttp.open("GET", "../AJAXOutput/MovingVeh.aspx", false);
            //xmlhttp.send();
            //xmlDoc = xmlhttp.responseXML;
            //markers = xmlDoc.getElementsByTagName("marker");
            // document.getElementById("side_bar").innerHTML = "refreshing data...";
            var userId = getUrlParameter('custId');
            $.ajax({
                dataType: "json",
                type: "GET",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                url: apiBase.apiurl + "MapAPI/MovingVehBindData",
                data: { custId: userId, groupId: '0' },
                success: function (data) {
                    debugger;
                    // Store
                    //localStorage.setItem("movingVehicleCount", data.length);
                  
                    window.parent.$("#bdgeMoving").text(data.length);
                    // document.getElementById('bdgeMoving').innerHTML = data.length;
                    var i = 0;
                    var lat;
                    var lng;
                    var name;
                    var drname;
                    var speed;
                    var lstdate;
                    var icon_type;                                                  
                    var loc;

                    // clear side bar list
                    side_bar_html = "";

                    // clear markers
                    if (gmarkers) {
                        for (i in gmarkers) {
                            gmarkers[i].setMap(null);
                        }
                        gmarkers.length = 0;
                    }

                    for (i = 0; i < data.length; i++) {
                        lat = data[i].lat;
                        lng = data[i].lng;
                        name =data[i].name;

                        drname = data[i].drname;
                        speed = data[i].speed;
                        lstdate = data[i].lstdate;
                        icon_type = parseFloat(data[i].type);
                        loc = data[i].loc;
                        //var currentTime = new Date();
                        var html = "<span>" + name + " <br/>Speed - " + speed + "<br/>Driver Name - " + drname + "<br/>DateTime - " + lstdate + "<br/>Location - " + loc + "</span>";
                        // define lat-long for positioning Marker
                        var myLatlng = new google.maps.LatLng(lat, lng);

                        // call function to create Marker
                        var marker = createMarker(myLatlng, name, html, icon_type);
                        gmarkers.push(marker);

                        // fit map to accomodate all markers (only for first time)
                        if (zoomToExtents == 0) {
                            if (i == data.length - 1) {
                                var bound = new google.maps.LatLngBounds();
                                for (var k in gmarkers) {
                                    bound.extend(gmarkers[k].getPosition());
                                }
                                map.fitBounds(bound);
                                zoomToExtents = 1;
                            }
                        }
                    }
                }
            })
        };
        // ================ create marker ================
        var side_bar_html = "";
        var gmarkers = [];
        var vehmarkers = [];
        var vmarkers = [];
        var htmls = [];
        var i = 0;

        var icons = [];
        icons[1] = new google.maps.MarkerImage("../img/legends/stop.png");
        //        // This marker is 28 pixels wide by 40 pixels tall.
        //      new google.maps.Size(28, 40),
        //        // The origin for this image is 0,0.
        //      new google.maps.Point(0, 0),
        //        // The anchor for this image is the base of the icon at 0,0.
        //      new google.maps.Point(0, 0));

        icons[2] = new google.maps.MarkerImage("../img/legends/moving.png");
        icons[3] = new google.maps.MarkerImage("../img/legends/hispeed.png"); //GreenIcon;   // Moving
        icons[4] = new google.maps.MarkerImage("../img/legends/ignion.png"); //ErrorIcon;   // Unknown (Moving without Ignition On)
        icons[5] = new google.maps.MarkerImage("../img/legends/stop.png");
        icons[6] = new google.maps.MarkerImage("../img/legends/towed.png");
        icons[7] = new google.maps.MarkerImage("../img/legends/moving.png");
        icons[8] = new google.maps.MarkerImage("../img/legends/hispeed.png");
        icons[9] = new google.maps.MarkerImage("../img/legends/unreach.png");
        icons[10] = new google.maps.MarkerImage("../img/legends/fenced.png");

        // ================ This function creates marker and associates info-window with it ================
        function createMarker(myLatlng, name, html, icon_type) {
            var marker = new google.maps.Marker({
                position: myLatlng,
                map: map,
                title: name,
                icon: icons[icon_type]
            });
            var infowindow = new google.maps.InfoWindow({
                content: html
            });
            google.maps.event.addListener(marker, 'mouseover', function () {
                infowindow.open(map, marker);
            });
            google.maps.event.addListener(marker, 'mouseout', function () {
                infowindow.close(map, marker);
            });

            google.maps.event.addListener(infowindow, 'closeclick', function () {
                openedInfoWindow = null;
            });

            vmarkers[i] = marker;
            htmls[i] = html;
                       side_bar_html += '<a href="javascript:myclick(' + i + ')">' + name + '</a><br/><div style="height:5px;border-top:dashed 1px #ccc;margin-top:5px;"></div>';
                       if (j == 1) {
                         //document.getElementById('side_bar').innerHTML = side_bar_html;
                     }
                      i++;
            return marker;
        }

        // ================ This function picks up the click and opens the corresponding info window ================
        var marker = new Array();
        function myclick(i) {
            var infowindow = new google.maps.InfoWindow({
                content: htmls[i]
            });
            if (openedInfoWindow != null) openedInfoWindow.close();
            infowindow.open(map, vmarkers[i]);
            openedInfoWindow = infowindow;
        }
    </script>
    <!-- Initialize map here -->
    <script type="text/javascript">
        var map;
        var j = 0;
        function initializeMap() {
            document.getElementById("map_canvas").style.backgroundImage = "url(../img/maploading.jpg)";
            var myOptions = {
                zoom: 6,
                center: new google.maps.LatLng(30.97, 76.77),
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            map = new google.maps.Map(document.getElementById('map_canvas'), myOptions);
            j = 1;
        }
        // Asynchronous call
        google.maps.event.addDomListener(window, 'load', initializeTimer);
    </script>
    <script type="text/javascript">
        function PointOfInterest() {
            if (document.getElementById("checkPOI").checked == true) {
                var fluster = new Fluster2(map);
                if (window.XMLHttpRequest) {
                    // code for IE7+, Firefox, Chrome, Opera, Safari
                    xmlhttp = new XMLHttpRequest();
                }
                else {
                    // code for IE6, IE5
                    xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
                }

                //xmlhttp.open("GET", "../AspxPages/POIOutput.aspx", false);
                //xmlhttp.send();
                //xmlDoc = xmlhttp.responseXML;
                //markers = xmlDoc.getElementsByTagName("marker");
                var userId = getUrlParameter('custId');
                $.ajax({
                    type: "GET",
                    dataType: "json",
                    url: apiBase.apiurl + "MapAPI/ListPOI",
                    data: { custId: userId },
                    success: function (data) {
                        
                        var count = data.ListLength;
                    //    var data = data.vehicleMapList;
                        for (i = 0; i < data.length; i++) {
                            //for loop starts    
                            //for (var i = 0; i < markers.length; i++) {
                            var lat = parseFloat(data[i].lat);
                            var lng = parseFloat(data[i].lng);
                            var details = data[i].details;
                            var marker = new google.maps.Marker
                            (
                            {
                                position: new google.maps.LatLng(lat, lng),
                                draggable: false,
                                map: map
                            });
                            // Add the marker to the Fluster
                            fluster.addMarker(marker);

                            // Set styles
                            // These are the same styles as default, assignment is only for demonstration ...
                            fluster.styles =
                            {
                                // This style will be used for clusters with more than 0 markers
                                0:
                                {
                                    image: 'http://gmaps-utility-library.googlecode.com/svn/trunk/markerclusterer/1.0/images/m1.png',
                                    //image: 'http://gmaps-utility-library.googlecode.com/svn/trunk/markerclusterer/1.0/images/m1.png',
                                    textColor: '#FFFFFF',
                                    width: 53,
                                    height: 52
                                },
                                // This style will be used for clusters with more than 10 markers
                                10:
                                {
                                    image: 'http://gmaps-utility-library.googlecode.com/svn/trunk/markerclusterer/1.0/images/m2.png',
                                    //image: 'http://gmaps-utility-library.googlecode.com/svn/trunk/markerclusterer/1.0/images/m1.png',
                                    textColor: '#FFFFFF',
                                    width: 56,
                                    height: 55
                                },
                                20:
                                {
                                    image: 'http://gmaps-utility-library.googlecode.com/svn/trunk/markerclusterer/1.0/images/m3.png',
                                    //image: 'http://gmaps-utility-library.googlecode.com/svn/trunk/markerclusterer/1.0/images/m1.png',
                                    textColor: '#FFFFFF',
                                    width: 66,
                                    height: 65
                                }
                            };
                            // Initialize Fluster
                            // This will set event handlers on the map and calculate clusters the first time.
                            fluster.initialize();
                            var label = new Label(
                            {
                                draggable: false,
                                map: map
                            });
                            label.bindTo('position', marker, 'position');
                            label.set('text', details);

                        }
                    }
                });
            }
            else if (document.getElementById("checkPOI").checked == false) {
                initializeTimer();
            }
        };
    </script>
       <script src="https://code.jquery.com/jquery-1.10.2.js" type="text/javascript"></script>

    
    <script type="text/javascript">
        $(document).ready(function () {
            $(".trigger").click(function () {
                $(".panel").toggle("fast");
                alert("hi");
                $(this).toggleClass("active");
                return false;
            });

            var url = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
          
            if (url == "height") {
               $("#map_canvas").css({ height: "850px" })
            }
        });
       
    </script>
</head>
<body>
      
    <noscript>
        <b>JavaScript must be enabled in order for you to use Google Maps.</b> However,
        it seems JavaScript is either disabled or not supported by your browser. To view
        Google Maps, enable JavaScript by changing your browser options, and then try again.</noscript>
     <div id="container">
        <div id="map_canvas" style="width: 100%; height: 680px;">
        </div>
        <div class="showPanel">
            Show POI

            <input type="checkbox" id="checkPOI" onclick="PointOfInterest()" />
                
        </div>
           
        <a class="trigger" href="#" style="display: none"></a>
    </div>
</body>
</html>
