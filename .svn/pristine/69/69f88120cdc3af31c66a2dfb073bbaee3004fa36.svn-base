<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<head>
         <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
    <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
    <title>Individual Location on Map</title>
    <!--<link href="../css/Map/Map/LocationOnmapCSS/map.css" rel="Stylesheet" media="screen" />-->
    <link rel="stylesheet" href="../css/Map/Map/LocationOnmapCSS/MapStyle.css" type="text/css"
        media="screen" />
     <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false" language="javascript"
        type="text/javascript"></script>
     <script type="text/javascript" src="~/js/common.js">
    </script>
    <script type="text/javascript" src="~/js/Map/LocationOnMap/label.js"></script>
    <script type="text/javascript" src="~/js/Map/LocationOnMap/Fluster2.packed.js"></script>



    <!-- <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
    <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
    <!-- Map css -->
   <!-- <link href="../css/Map/Map/LocationOnmapCSS/map.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="../css/Map/Map/LocationOnmapCSS/mapstyle.css" type="text/css"
        media="screen" />-->
    <!-- Map has been localized to show the names, wherever available in ENGLISH (en) and country/region as INDIA -->
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false" language="javascript"
        type="text/javascript"></script>
    <script type="text/javascript" src="../js/Map/LocationOnMap/label.js"></script>
    <script type="text/javascript" src="../js/Map/LocationOnMap/Fluster2.packed.js"></script>

    <script language="javascript" type="text/javascript">
        var BoxID;
        var VehName;
        var Location;
        var Longitude;
        var Latitude;
        var Speed;
        var DataDate;
        var Icontype;
        var Status;

        var map;
        var flightPlanCoordinates = [];
        var gmarkers = [];
        var flightPath;
        var delay = 35000;
        var timerRunning = false;
        var timerID;
        var zoomToExtents = 0;
        var autoZoom = true;
        var showTrail = true;

        //------------------ Initialize Timer ----------------------//
        function initializeTimer() {
            zoomToExtents = 0;
            initialize();
            StopTheClock();
            //document.getElementById('product').innerHTML = "loading vehicle...";
            StartTheTimer();
        }

        function StopTheClock() {
            if (timerRunning)
                clearTimeout(timerID)
            timerRunning = false;
        }
        function StartTracking() {
            StartTheTimer();
        }
        function StartTheTimer() {
            getdata();
            timerRunning = true;
            timerID = self.setTimeout("StartTracking()", 35000);
        }

        //var map;
        //var html = "<table cellpadding='5' cellspacing='5' style='width:450px;'>" +
        //         "<tr><td>Location:</td> <td><input type='text' class='text' style='width:250px;' id='name'/> </td> </tr>" +
        //         "<tr><td></td><td><input type='button' value='Save' onclick='saveData()'/></td></tr>";
        //var marker;
        //var infowindow;
        function initialize() {
            var Latitude = GETSTRING('lat');
          
            var Longitude = GETSTRING('longi');
          
            if (Latitude == "") {
                Latitude = '30.724149';
                Longitude = '76.76';
            }
            var myLatLng = new google.maps.LatLng(parseFloat(Latitude), parseFloat(Longitude));
            //var myLatLng = new google.maps.LatLng(30.7234, 76.76);
            //alert(myLatLng);
            var mapOptions = {
                zoom: 12,
                center: myLatLng,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };

            map = new google.maps.Map(document.getElementById('map_canvas'), mapOptions);
            PointOfInterest();
            GeoFence();


        }
        //******************* BEGIN GEOFENCE **************************/
        
        function GeoFence() {
            var bbid=GETSTRING('BBID');
        
          
            var theFence;
            var triangleCoords = new Array();
            // Request
            if (window.XMLHttpRequest) {// code for IE7+, Firefox, Chrome, Opera, Safari
                xmlhttp = new XMLHttpRequest();
            }
            else {// code for IE6, IE5
                xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
            }
            xmlhttp.open("GET", "../AspxPages/geooutput.aspx?dummy=" + Math.random() * 5, false);
            xmlhttp.send();
            xmlDoc = xmlhttp.responseXML;
            var markers = xmlDoc.documentElement.getElementsByTagName("marker");
            if (markers.length > 0) {
                var fenceName = markers[0].getAttribute("fenceName");
                $("#fenceName").html(fenceName);
                BoxID = markers[0].getAttribute("bbid");
            }
            else {
                $("#fenceName").html("No fence exists.<a href='/HTML/SetFence.htm' > Click here to create</a>");
            }
            for (var i = 0; i < markers.length; i++) {
                var lat = parseFloat(markers[i].getAttribute("lat"));
                var lng = parseFloat(markers[i].getAttribute("lng"));
                triangleCoords[i] = new google.maps.LatLng(lat, lng);
                if (i == 1) {
                    var reCenter = new google.maps.LatLng(lat, lng);
                    map.setCenter(reCenter);
                }
            } 
            theFence = new google.maps.Polygon({
                paths: triangleCoords,
                strokeColor: "#FF0000",
                strokeOpacity: 0.6,
                strokeWeight: 2,
                fillColor: "#FF0000",
                fillOpacity: 0.35
            });
            theFence.setMap(map);
        }
        //******************* END GEOFENCE **************************/
            // end for
            ///  alert(triangleCoords);
            //*************** Show Geofence **************/
    </script>
    <script type="text/javascript">
        function PointOfInterest() {
            //alert('true');
            var fluster = new Fluster2(map);
            if (window.XMLHttpRequest) {
                // code for IE7+, Firefox, Chrome, Opera, Safari
                xmlhttp = new XMLHttpRequest();
            }
            else {
                // code for IE6, IE5
                xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
            }
            xmlhttp.open("GET", "../AspxPages/POIOutput.aspx", false);
            xmlhttp.send();
            xmlDoc = xmlhttp.responseXML;
            markers = xmlDoc.getElementsByTagName("marker");
            //for loop starts    
            for (var i = 0; i < markers.length; i++) {
                var lat = parseFloat(markers[i].getAttribute("lat"));
                var lng = parseFloat(markers[i].getAttribute("lng"));
                var details = markers[i].getAttribute("details");
                var StandardDistance = markers[i].getAttribute("StandardDistance");

                var marker = new google.maps.Marker
                (
                {
                    position: new google.maps.LatLng(lat, lng),
                    draggable: false,
                    map: map
                });


                //var circle = new google.maps.Circle({
                //    map: map,
                //    radius: parseInt(StandardDistance),    // 10 miles in metres
                //    fillColor: '#AA0000'
                //});
                //circle.bindTo('center', marker, 'position');
                // Add the marker to the Fluster
                fluster.addMarker(marker);
                // Set styles
                // These are the same styles as default, assignment is only for demonstration ...
                fluster.styles =
                {
                    // This style will be used for clusters with more than 0 markers
                    0:
                    {
                        image: 'http://gmaps-utility-library.googlecode.com/svn/trunk/markerclusterer/1.0/images/m1.png',
                        //image: 'http://gmaps-utility-library.googlecode.com/svn/trunk/markerclusterer/1.0/images/m1.png',
                        textColor: '#FFFFFF',
                        width: 53,
                        height: 52
                    },
                    // This style will be used for clusters with more than 10 markers
                    10:
                    {
                        image: 'http://gmaps-utility-library.googlecode.com/svn/trunk/markerclusterer/1.0/images/m2.png',
                        //image: 'http://gmaps-utility-library.googlecode.com/svn/trunk/markerclusterer/1.0/images/m1.png',
                        textColor: '#FFFFFF',
                        width: 56,
                        height: 55
                    },
                    20:
                    {
                        image: 'http://gmaps-utility-library.googlecode.com/svn/trunk/markerclusterer/1.0/images/m3.png',
                        //image: 'http://gmaps-utility-library.googlecode.com/svn/trunk/markerclusterer/1.0/images/m1.png',
                        textColor: '#FFFFFF',
                        width: 66,
                        height: 65
                    }
                };
                // Initialize Fluster
                // This will set event handlers on the map and calculate clusters the first time.
                fluster.initialize();
                var label = new Label(
                {
                    draggable: false,
                    map: map
                });
                label.bindTo('position', marker, 'position');
                label.set('text', details);
            }
        };
    </script>
      <script src="../js/Map/LocationOnMap/jquery-1.7.1.min.js" type="text/javascript"></script>
    <script src="../js/Map/LocationOnMap/CreateMapMarker.js" type="text/javascript"></script>
    <script type="text/javascript">
        function getParameterByName(name) {

            name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
            var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
            results = regex.exec(location.search);
            return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
        }
        function GETSTRING() {
            var data = [];
            var param;
            for (x = 0; x < arguments.length; ++x) {
                param = location.href.match(new RegExp("/\?".concat(arguments[x], "=", "([^\n&]*)")));
                if (param == null) {
                    data.push("");
                } else {
                    data.push(param[1]);
                }
            }
            return data;
        }
    </script>
    
    <script type="text/javascript">
        function getdata() {
            var id;
            var vehname;
            var drivername;
            var drmob = '';

            var Latitude = GETSTRING('lat');
           
            var Longitude = GETSTRING('longi');
           
          
            id = GETSTRING('bbid');
          
            vehname = getParameterByName('vehname');
            Location = getParameterByName('Location');
            CurrentDate = getParameterByName('Date');
            Geo = getParameterByName('Geo');
           
           // document.getElementById('txtVehname').value = getParameterByName('vehname');
            //vehname = 'PB';

            //alert(id);

            //$.getJSON("/Custom/GetBoxTrail?bbid=" + id,
                    //function (data) {

                        //clear markers
                        if (gmarkers) {
                            for (i in gmarkers) {
                                gmarkers[i].setMap(null);
                            }
                            gmarkers.length = 0;
                        }
                        if (flightPath != null) {
                            flightPath.setMap(null);
                        }
                        var i = 0;
                        // loop through values
                        //$.each(data, function (key, val) {
                        flightPlanCoordinates[i] = new google.maps.LatLng(Latitude, Longitude);

                        // define lat-long for positioning Marker
                        var myLatlng = new google.maps.LatLng(Latitude, Longitude);
                        Speed = 5;
                        //Location = val.Location;
                        //drivername = val.dataMode;
                        //drmob = val.distance;
                        //DataDate = val.DataDate;
                        //Icontype = val.IconType;
                        var html = "Vehicle Name:" + vehname + "<br/> Date-Time: " + CurrentDate + "<br/> Location: " + Location + "<br/>Route: " + Geo
                       
                        //alert(html);
                      //  alert(Icontype);
                        if (i == 0) {

                                if (Speed > 0) {
                                    // call function to create Marker
                                   
                                    var marker = createMarker(myLatlng, vehname, html, "2", "status", map);
                                   
                                    gmarkers.push(marker);
                                }

                           
                        }
                        else {
                            //if (Speed > 0) {
                            showTrail = $('#checkTrail').is(':checked');
                            if (showTrail == true) {
                                // call function to create Marker
                                var marker = createMarker(myLatlng, vehname, html, "1", "status", map);
                                gmarkers.push(marker);
                                //}
                                }
                            }
                            i++;

                        //});

            //auto center
            reCenter();

            if (showTrail == true) {
                flightPath = new google.maps.Polyline({
                    path: flightPlanCoordinates,
                    strokeColor: '#0000FF',
                    strokeOpacity: 0.8,
                    strokeWeight: 5
                });

                flightPath.setMap(map);
            }
        //})
                //.fail(
                //    function (jqXHR, textStatus, err) {
                //        $('#product').html('Error: ' + jqXHR.responseText);
                //    });

        }
    </script>
    <script type="text/javascript" language="javascript">
        // ---------------- Show Hide Trail -------------
        function showHideTrail(check) {

            for (var i = 1; i < gmarkers.length; i++) {
                if (check == false) {
                    gmarkers[i].setMap(null);
                    flightPath.setMap(null);
                }
                else {
                    gmarkers[i].setMap(map);
                    flightPath.setMap(map);
                }
            }
        }

        // ---------------- Re-Center map to bounds -------------
        //function reCenter() {
        //    try {
        //        autoZoom = $('#checkZoom').is(':checked');
        //    }
        //    catch (ex) {
        //    }
        //    if (autoZoom == true) {
        //        var bound = new google.maps.LatLngBounds();
        //        for (var i in gmarkers) {
        //            bound.extend(gmarkers[i].getPosition());
        //        }
        //        map.fitBounds(bound);
        //        //zoomToExtents = 1;
        //    }
        //}
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            $(".trigger").click(function () {
                $(".panel").toggle("fast");
                $(this).toggleClass("active");
                return false;
            });
        });
    </script>
</head>
<body onload="javascript:initializeTimer();">
    <noscript>
        <b>JavaScript must be enabled in order for you to use Google Maps.</b> However,
        it seems JavaScript is either disabled or not supported by your browser. To view
        Google Maps, enable JavaScript by changing your browser options, and then try again.</noscript>
    <div id="container">
    <input type="text" id="txtVehname" hidden="hidden" />
        <div id="map_canvas" style="width:100%; height:700px;">
        </div>
       <!-- <div class="panel" style="height: 100px;">
            <div id="side_bar">
                <p>
                    Trail
                    <input type="checkbox" id="checkTrail" checked="checked" onclick="javascript: showHideTrail(this.checked);" />
                </p>
                <p>
                    Auto Zoom
                    <input type="checkbox" onchange="javascript:reCenter();" id="checkZoom" checked="checked" />
                </p>
                <p id="product">
                </p>
            </div>
        </div>-->
      <!--  <a class="trigger" href="#">Settings</a>-->
    </div>
</body>
</html>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
</head>
<body>

</body>
</html>
