<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <script src="../js/Map/LocationOnMap/jquery-1.7.1.min.js" type="text/javascript"></script>
    <script src="../js/Map/LocationOnMap/CreateMapMarker.js" type="text/javascript"></script>
    <title>Google map API V3</title>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
    <style type="text/css">
        html
        {
            height: 100%;
        }
        body
        {
            height: 100%;
            margin: 0px;
            padding: 0px;
        }
        #map_canvas
        {
            height: 100%;
        }
    </style>
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&key=AIzaSyCdsMp_TiMpmLDoDw8jtVSKMvpiSBAY1EY" language="javascript"
        type="text/javascript"></script>
    <script type="text/javascript" src="../js/Map/LocationOnMap/jquery-1.3.2.js"></script>
    <script type="text/javascript">
        //******************* BEGIN INITILIAZE **************************/
        var map;
        var BoxID;
        var VehName;
        var Location;
        var Longitude;
        var Latitude;
        var Speed;
        var DataDate;
        var Icontype;
        var Status;
        var map;
        var flightPlanCoordinates = [];
        var gmarkers = [];
        var flightPath;
        var delay = 15000;
        var timerRunning = false;
        var timerID;
        var zoomToExtents = 0;
        var autoZoom = true;
        var showTrail = true;
        function initialize() {
            var myLatLng = new google.maps.LatLng(30.600, 77.3058);
            var myOptions = {
                zoom: 10,
                center: myLatLng,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            // Set Map
            map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);
            // Show Geofence
            GeoFence();
            getdata();
        }
        //******************* END INITILIAZE **************************/

        //******************* BEGIN GEOFENCE **************************/
        
        function GeoFence() {
            var theFence;
            var triangleCoords = new Array();
            // Request
            if (window.XMLHttpRequest) {// code for IE7+, Firefox, Chrome, Opera, Safari
                xmlhttp = new XMLHttpRequest();
            }
            else {// code for IE6, IE5
                xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
            }
            xmlhttp.open("GET", "../AspxPages/geooutput.aspx?dummy=" + Math.random() * 5, false);
            xmlhttp.send();
            xmlDoc = xmlhttp.responseXML;
            var markers = xmlDoc.documentElement.getElementsByTagName("marker");
            if (markers.length > 0) {
                var fenceName = markers[0].getAttribute("fenceName");
                $("#fenceName").html(fenceName);
                BoxID = markers[0].getAttribute("bbid");
            }
            //else {
            //    $("#fenceName").html("No fence exists.<a href='/HTML/SetFence.htm' > Click here to create</a>");
            //}
            for (var i = 0; i < markers.length; i++) {
                var lat = parseFloat(markers[i].getAttribute("lat"));
                var lng = parseFloat(markers[i].getAttribute("lng"));
                triangleCoords[i] = new google.maps.LatLng(lat, lng);
                if (i == 1) {
                    var reCenter = new google.maps.LatLng(lat, lng);
                    map.setCenter(reCenter);
                }
            } // end for
            ///  alert(triangleCoords);
            //*************** Show Geofence **************/
            theFence = new google.maps.Polygon({
                paths: triangleCoords,
                strokeColor: "#FF0000",
                strokeOpacity: 0.6,
                strokeWeight: 2,
                fillColor: "#FF0000",
                fillOpacity: 0.35
            });
            theFence.setMap(map);
        }
        //******************* END GEOFENCE **************************/
    </script>
    <script type="text/javascript">
        function getParameterByName(name) {
            name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
            var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
            results = regex.exec(location.search);
            return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
        }
        function GETSTRING() {
            var data = [];
            var param;
            for (x = 0; x < arguments.length; ++x) {
                param = location.href.match(new RegExp("/\?".concat(arguments[x], "=", "([^\n&]*)")));
                if (param == null) {
                    data.push("");
                } else {
                    data.push(param[1]);
                }
            }
            return data;
        }
    </script>
    <script type="text/javascript">
        function getdata() {
            var id;
            var vehname;
            var drivername;
            var drmob = '';
            $.getJSON("/Custom/GetBoxTrail?bbid=" + BoxID,
                    function (data) {
                        //clear markers
                        if (gmarkers) {
                            for (i in gmarkers) {
                                gmarkers[i].setMap(null);
                            }
                            gmarkers.length = 0;
                        }
                        if (flightPath != null) {
                            flightPath.setMap(null);
                        }
                        var i = 0;
                        // loop through values
                        $.each(data, function (key, val) {
                            flightPlanCoordinates[i] = new google.maps.LatLng(val.Latitude, val.Longitude);
                            // define lat-long for positioning Marker
                            var myLatlng = new google.maps.LatLng(val.Latitude, val.Longitude);
                            Speed = val.Speed;
                            Location = val.Location;
                            //drivername = val.dataMode;
                            //drmob = val.distance;
                            DataDate = val.DataDate;
                            Icontype = val.Icontype;
                            var html = "Vehicle Name:" + BoxID + "<br/> Date-Time: " + DataDate + "<br/> Speed: " + Speed + "<br/> Location: " + Location
                            if (i == 0) {
                                if (Icontype == 4) {
                                    var marker = createMarker(myLatlng, vehname, html, "4", "status", map);
                                    gmarkers.push(marker);
                                }
                                else {
                                    if (Speed > 0) {
                                        // call function to create Marker
                                        var marker = createMarker(myLatlng, vehname, html, "2", "status", map);
                                        gmarkers.push(marker);
                                    }
                                    else {
                                        var marker = createMarker(myLatlng, vehname, html, "3", "status", map);
                                        gmarkers.push(marker);
                                    }
                                }
                            }
                            else {
                                //if (Speed > 0) {
                                if (showTrail == true) {
                                    // call function to create Marker
                                    var marker = createMarker(myLatlng, vehname, html, "1", "status", map);
                                    gmarkers.push(marker);
                                    //}
                                }
                            }
                            i++;
                        });
                        //auto center
                        //reCenter();
                        if (showTrail == true) {
                            flightPath = new google.maps.Polyline({
                                path: flightPlanCoordinates,
                                strokeColor: '#0000FF',
                                strokeOpacity: 0.8,
                                strokeWeight: 5
                            });
                            flightPath.setMap(map);
                        }
                    })
                .fail(
                    function (jqXHR, textStatus, err) {
                        $('#product').html('Error: ' + jqXHR.responseText);
                    });
        }
    </script>
    <script type="text/javascript" language="javascript">
        // ---------------- Show Hide Trail -------------
        gmarkers.length = 5
        function showHideTrail(check) {
            for (var i = 1; i < gmarkers.length; i++) {
                if (check == false) {
                    gmarkers[i].setMap(null);
                    flightPath.setMap(null);
                }
                else {
                    gmarkers[i].setMap(map);
                    flightPath.setMap(map);
                }
            }
        }
        // ---------------- Re-Center map to bounds -------------
        function reCenter() {
            try {
                //autoZoom = $('#checkZoom').is(':checked');
            }
            catch (ex) {
            }
            if (autoZoom == true) {
                var bound = new google.maps.LatLngBounds();
                for (var i in gmarkers) {
                    bound.extend(gmarkers[i].getPosition());
                }
                map.fitBounds(bound);
                //zoomToExtents = 1;
            }
        }
    </script>
</head>
<body onload="javascript:initialize();">
    <div id="map_canvas" style="width: 100%; height: 100%">
    </div>
    <div style="position: absolute; top: 2px; left: 38%; padding: 5px 15px; background-color: #FFFF80;
        font-family: Verdana; font-size: 11px; list-style: 12px; opacity: 0.95">
        <span id="fenceName"></span>
    </div>
</body>
</html>
