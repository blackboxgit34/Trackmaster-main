<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
    <title>Set Geo-fence</title>
    <meta name="keywords" content="blackbox,google map,v3,geofence" />
    <meta name="description" content="BlackBox Geofence Creator" />
    <link href="../css/Map/Map/LocationOnmapCSS/map.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="../css/Map/Map/LocationOnmapCSS/mapstyle.css" type="text/css"
        media="screen" />
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false" language="javascript"
        type="text/javascript"></script>
    <script type="text/javascript" src="../js/Map/GeoFence/jquery-1.4.2.min.js"></script>
    <script type="text/javascript" src="../js/Map/GeoFence/polygon.min.js"></script>
      <script type="text/javascript" src="../js/Map/LocationOnMap/label.js"></script>
        <script type="text/javascript" src="../js/Map/LocationOnMap/Fluster2.packed.js"></script>
    <style type="text/css">
        .panel1
        {
            background: none repeat scroll 0 0 #fff;
            border: 1px solid #ccc;
            height: auto;
            left: 0;
            opacity: 0.85;
            padding: 10px;
            position: absolute;
            top: 80px;
            width: 300px;
        }
        a.trigger1
        {
            background: url("minus.png") no-repeat scroll 85% 55% #526ea6;
            color: #fff;
            display: block;
            left: 0;
            padding: 10px 40px 10px 15px;
            position: absolute;
            text-decoration: none;
            top: 43px;
        }
    </style>
    <script type="text/javascript">
        var timerID = null;
        var timerRunning = false;
        var delay = 20000;
        var zoomToExtents = 0;
        var openedInfoWindow = null;
        function initializeTimer() {
            //zoomToExtents = 0;
            initializeMap();
            if (document.getElementById("checkPOI").checked == true) {
                PointOfInterest();
                //alert('true');
            }
            else {
                //alert('false');
            }
            StopTheClock();
            document.getElementById('side_bar').innerHTML = "Loading vehicles...";
            StartTheTimer();
        }
        function StopTheClock() {
            if (timerRunning)
                clearTimeout(timerID)
            timerRunning = false;
        }
        function StartTracking() {
            StartTheTimer();
        }
        function StartTheTimer() {
            readMapData();
            timerRunning = true;
            timerID = self.setTimeout("StartTracking()", delay)
        }
        function reCenter() {
            var bound = new google.maps.LatLngBounds();
            for (var i in gmarkers) {
                bound.extend(gmarkers[i].getPosition());
            }
            //map.fitBounds(bound);
            //zoomToExtents = 1;
        }

        // ================ read mapData ================
        function readMapData() {
            
            if (window.XMLHttpRequest) {// code for IE7+, Firefox, Chrome, Opera, Safari
                xmlhttp = new XMLHttpRequest();
            }
            else {// code for IE6, IE5
                xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
            }
            xmlhttp.open("GET", "../AJAXOutput/NewLocationMapOutput.aspx", false);
            xmlhttp.send();
            xmlDoc = xmlhttp.responseXML;
            markers = xmlDoc.getElementsByTagName("marker");
            document.getElementById("side_bar").innerHTML = "refreshing data...";

            var i = 0;
            var lat;
            var lng;
            var name;
            var drname;
            var DriMob;
            var speed;
            var lstdate;
            var icon_type;
            var loc;
            var LastDateIgnOnOff;
            var Duration;
            // clear side bar list
            side_bar_html = "";

            // clear markers
            if (gmarkers) {
                for (i in gmarkers) {
                    gmarkers[i].setMap(null);
                }
                gmarkers.length = 0;
            }

            for (i = 0; i < markers.length; i++) {
                lat = markers[i].getAttribute("lat");
                lng = markers[i].getAttribute("lng");
                name = markers[i].getAttribute("name");
                drname = markers[i].getAttribute("drname");
                speed = markers[i].getAttribute("speed");
                lstdate = markers[i].getAttribute("lstdate");
                icon_type = parseFloat(markers[i].getAttribute("type"));
                loc = markers[i].getAttribute("loc");
                Duration = markers[i].getAttribute("Duration");
                DriMob = markers[i].getAttribute("DriMobNo");


                LastDateIgnOnOff = markers[i].getAttribute("LastDateIgnOnOff");
                //var currentTime = new Date();
                var html = "<span>" + name + " <br/>Speed - " + speed + "<br/>Driver Name - " + drname + "<br/>Driver Mobile No - " + DriMob + "<br/>DateTime - " + lstdate + "<br/>Location - " + loc + "<br/></span>";
                // define lat-long for positioning Marker
                var myLatlng = new google.maps.LatLng(lat, lng);

                //// Label Of Vehicle No 




                // call function to create Marker
                var marker = createMarker(myLatlng, name, html, icon_type);

                var label = new Label(
                  {
                      draggable: false,
                      map: map
                  });
                var hh = name;
                var htmlXX = '<span class="Newla">' + hh + '</span>';

                label.bindTo('position', marker, 'position');
                label.set('text', htmlXX);

                gmarkers.push(marker);

                // fit map to accomodate all markers (only for first time)
                if (zoomToExtents == 0) {
                    if (i == markers.length - 1) {
                        var bound = new google.maps.LatLngBounds();
                        for (var k in gmarkers) {
                            bound.extend(gmarkers[k].getPosition());
                        }
                        map.fitBounds(bound);
                        zoomToExtents = 1;
                    }
                }
            }
        }

        // ================ create marker ================
        var side_bar_html = "";
        var gmarkers = [];
        var vehmarkers = [];
        var vmarkers = [];
        var htmls = [];
        var i = 0;

        var icons = [];
        icons[1] = new google.maps.MarkerImage("../img/legends/stop.png");
        //        // This marker is 28 pixels wide by 40 pixels tall.
        //      new google.maps.Size(28, 40),
        //        // The origin for this image is 0,0.
        //      new google.maps.Point(0, 0),
        //        // The anchor for this image is the base of the icon at 0,0.
        //      new google.maps.Point(0, 0));

        icons[2] = new google.maps.MarkerImage("../img/legends/moving.png");
        icons[3] = new google.maps.MarkerImage("../img/legends/hispeed.png"); //GreenIcon;   // Moving
        icons[4] = new google.maps.MarkerImage("../img/legends/ignion.png"); //ErrorIcon;   // Unknown (Moving without Ignition On)
        icons[5] = new google.maps.MarkerImage("../img/legends/stop.png");
        icons[6] = new google.maps.MarkerImage("../img/legends/towed.png");
        icons[7] = new google.maps.MarkerImage("../img/legends/moving.png");
        icons[8] = new google.maps.MarkerImage("../img/legends/hispeed.png");
        icons[9] = new google.maps.MarkerImage("../img/legends/unreach.png");
        icons[10] = new google.maps.MarkerImage("../img/legends/fenced.png");

        // ================ This function creates marker and associates info-window with it ================
        function createMarker(myLatlng, name, html, icon_type) {
            var marker = new google.maps.Marker({
                position: myLatlng,
                map: map,
                title: name,
                icon: icons[icon_type]

            });
            var infowindow = new google.maps.InfoWindow({
                content: html
            });
            google.maps.event.addListener(marker, 'mouseover', function () {
                infowindow.open(map, marker);
            });
            google.maps.event.addListener(marker, 'mouseout', function () {
                infowindow.close(map, marker);
            });

            google.maps.event.addListener(infowindow, 'closeclick', function () {
                openedInfoWindow = null;
            });

            vmarkers[i] = marker;
            htmls[i] = html;
            side_bar_html += '<a href="javascript:myclick(' + i + ')">' + name + '</a><br/><div style="height:5px;border-top:dashed 1px #ccc;margin-top:5px;"></div>';
            if (j == 1) {
                document.getElementById('side_bar').innerHTML = side_bar_html;
            }
            i++;
            return marker;
        }

        // ================ This function picks up the click and opens the corresponding info window ================
        var marker = new Array();
        function myclick(i) {
            var infowindow = new google.maps.InfoWindow({
                content: htmls[i]
            });
            if (openedInfoWindow != null) openedInfoWindow.close();
            infowindow.open(map, vmarkers[i]);
            openedInfoWindow = infowindow;
        }
    </script>
    <!-- Initialize map here -->
    <script type="text/javascript">
        var map;
        var j = 0;
        function initializeMap() {
            document.getElementById("map_canvas").style.backgroundImage = "url(../img/maploading.jpg)";
            var myOptions = {
                zoom: 8,
                center: new google.maps.LatLng(30.97, 76.77),
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            map = new google.maps.Map(document.getElementById('map_canvas'), myOptions);
            j = 1;
        }
        // Asynchronous call
        google.maps.event.addDomListener(window, 'load', initializeTimer);
    </script>
    <script type="text/javascript">
        function PointOfInterest() {
            if (document.getElementById("checkPOI").checked == true) {
                //alert('true');
                var fluster = new Fluster2(map);
                if (window.XMLHttpRequest) {
                    // code for IE7+, Firefox, Chrome, Opera, Safari
                    xmlhttp = new XMLHttpRequest();
                }
                else {
                    // code for IE6, IE5
                    xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
                }
                xmlhttp.open("GET", "../AspxPages/POIOutput.aspx", false);
                xmlhttp.send();
                xmlDoc = xmlhttp.responseXML;
                markers = xmlDoc.getElementsByTagName("marker");
                //for loop starts    
                for (var i = 0; i < markers.length; i++) {
                    var lat = parseFloat(markers[i].getAttribute("lat"));
                    var lng = parseFloat(markers[i].getAttribute("lng"));
                    var details = markers[i].getAttribute("details");
                    var marker = new google.maps.Marker
                    (
                    {
                        position: new google.maps.LatLng(lat, lng),
                        draggable: false,
                        map: map
                    });
                    // Add the marker to the Fluster
                    fluster.addMarker(marker);
                    // Set styles
                    // These are the same styles as default, assignment is only for demonstration ...
                    fluster.styles =
                    {
                        // This style will be used for clusters with more than 0 markers
                        0:
                        {
                            image: 'http://gmaps-utility-library.googlecode.com/svn/trunk/markerclusterer/1.0/images/m1.png',
                            //image: 'http://gmaps-utility-library.googlecode.com/svn/trunk/markerclusterer/1.0/images/m1.png',
                            textColor: '#FFFFFF',
                            width: 53,
                            height: 52
                        },
                        // This style will be used for clusters with more than 10 markers
                        10:
                        {
                            image: 'http://gmaps-utility-library.googlecode.com/svn/trunk/markerclusterer/1.0/images/m2.png',
                            //image: 'http://gmaps-utility-library.googlecode.com/svn/trunk/markerclusterer/1.0/images/m1.png',
                            textColor: '#FFFFFF',
                            width: 56,
                            height: 55
                        },
                        20:
                        {
                            image: 'http://gmaps-utility-library.googlecode.com/svn/trunk/markerclusterer/1.0/images/m3.png',
                            //image: 'http://gmaps-utility-library.googlecode.com/svn/trunk/markerclusterer/1.0/images/m1.png',
                            textColor: '#FFFFFF',
                            width: 66,
                            height: 65
                        }
                    };
                    // Initialize Fluster
                    // This will set event handlers on the map and calculate clusters the first time.
                    fluster.initialize();
                    var label = new Label(
                    {
                        draggable: false,
                        map: map
                    });
                    label.bindTo('position', marker, 'position');
                    label.set('text', details);
                }
            }
            else if (document.getElementById("checkPOI").checked == false) {
                initializeTimer();
                //alert('false');

            }

            //end for }
        };

        // ================Start ================
        function initialize() {
            $(function () {
                //create map
                var latx = document.getElementById('txtlat').value;
                var lonx = document.getElementById('txtlon').value;
                if (latx == '') {
                    latx = 30.6;
                }
                if (lonx == '') {
                    lonx = 76.6;
                }
                var myCenter = new google.maps.LatLng(latx, lonx);
                var myOptions = {
                    zoom: 10,
                    center: myCenter,
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                }
                //alert(myCenter);
                map = new google.maps.Map(document.getElementById('map_canvas'), myOptions);
                var creator = new PolygonCreator(map);
                // Bind Fenced Vehicles
                GeoFence();
              

                //reset
                $('#reset').click(function () {
                    if (creator.pen.listOfDots > 3) {
                        //                        alert(dataPanel);
                        //                        alert(creator);
                    }
                    creator.destroy();
                    creator = null;
                    creator = new PolygonCreator(map);
                });
                //reset
                $('#getCityMap').click(function () {
                    getCityMap();
                });
                //show paths
                $('#saveFence').click(function () {
                    //Empty message panel
                    $('#Mesasage').html("");
                    $('#dataPanel').empty();
                    if (null == creator.showData()) {
                        $('#Mesasage').html('Please first create a polygon');
                        $('#Mesasage').show();
                    } else {
                        $('#dataPanel').append(creator.showData());
                        SaveFenceData();
                    }
                });
            });
        }
    </script>
    <script type="text/javascript" language="javascript">

        var map;
        var arr = new Array();
        var polygons = [];
        var BoxID;
        var VehName;
        var Location;
        var Longitude;
        var Latitude;
        var Speed;
        var DataDate;
        var Icontype;
        var Status;
        var map;
        var bounds = new google.maps.LatLngBounds();
        var flightPlanCoordinates = [];
        var gmarkers = [];
        var flightPath;
        var delay = 15000;
        var timerRunning = false;
        var timerID;
        var zoomToExtents = 0;
        var autoZoom = true;
        var showTrail = true;
        var labelOptions;


        var send;
        function getCityMap(the_value) {
            var latLong = new google.maps.LatLng(30.97, 76.77);
            //alert(latLong);
            map.setCenter(latLong);
        }
        // ========================== Save Geo Fence ===========================
        function SaveFenceData() {
            var fenceName, latLongPairs, alertson;
            var latLongPairs = document.getElementById('dataPanel').innerHTML;
            fenceName = document.getElementById('txtFenceName').value;
            send = latLongPairs;
            //alert(latLongPairs);
            if (document.getElementById('chksms').checked == true) {
                alertson = "SMS";
            }
            else if (document.getElementById('chkemail').checked == true) {
                alertson = "EMAIL";
            }
            else { alertson = "NA" }
            if (document.getElementById('chkemail').checked == true && document.getElementById('chksms').checked == true)
            { alertson = "SMS/EMAIL" }
            var name = send;
            if (txtFenceName.value == '') {
                alert('Fence Name Required');
            }
            else {
               
                $.ajax({
                    url: '/Geofence/AddNewFence1',
                    type: 'post',
                    data: { fenceName: fenceName, latLongPairs: latLongPairs, alertson: alertson },
                    success: function (data) {
                        //alert(data);
                        alert('Fence successfully saved');
                        // Clear Fence Name
                        $('#txtFenceName').val("");

                        GeoFence();

                    },
                    error: function () {
                        alert('Error');
                    }
                });
                //hitecpoint.GeoFenceDataForMap.IGeofencingService.GetGeofencingRoute(fenceName, latLongPairs, CallBackMultiple);
            }
        }
        // ========================== END Save Geo Fence ===========================
        var markers = [];
        function CallBackMultiple(markers) {
            //alert(markers.length);
            for (i = 0; i < markers.length; i++) {
                var fenceName = markers[i].FenceName;
                if (fenceName == "Error") {
                    document.getElementById('resultPanel').innerHTML = '<div class="error">' + fenceName + "</div>";
                }
                else {
                    document.getElementById('resultPanel').innerHTML = '<div class="success">' + fenceName + "</div>";
                }
            }
        }


        //******************* BEGIN GEOFENCE **************************/
        var boundaryPolygon;
        function GeoFence() {
            debugger
            var theFence;
            var triangleCoords = new Array();
            // Request
            if (window.XMLHttpRequest) {// code for IE7+, Firefox, Chrome, Opera, Safari
                xmlhttp = new XMLHttpRequest();
            }
            else {// code for IE6, IE5
                xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
            }
            xmlhttp.open("GET", "../AspxPages/GeoOutputCust.aspx?dummy=" + Math.random() * 5, false);
            xmlhttp.send();
            xmlDoc = xmlhttp.responseXML;
            var markers = xmlDoc.documentElement.getElementsByTagName("marker");
            if (markers.length > 0) {
                var fenceName = markers[0].getAttribute("fenceName");
                $("#fenceName").html(fenceName);
                BoxID = markers[0].getAttribute("bbid");
            }
            else {
                $("#fenceName").html("No fence exists.<a href='/HTML/SetFence.htm' > Click here to create</a>");
            }
            //for (var i = 0; i < markers.length; i++) {
            //    var lat = parseFloat(markers[i].getAttribute("lat"));
            //    var lng = parseFloat(markers[i].getAttribute("lng"));
            //    triangleCoords[i] = new google.maps.LatLng(lat, lng);
            //    if (i == 1) {
            //        var reCenter = new google.maps.LatLng(lat, lng);
            //        map.setCenter(reCenter);
            //    }
            //} // end for
           
         
            var subdivision = xmlDoc.getElementsByTagName("subdivision");
            var x;
            
            for (var i = 0; i < subdivision.length; i++) {
                arr = [];

                var coordinates = xmlDoc.documentElement.getElementsByTagName("subdivision")[i].getElementsByTagName("coord");
                for (var j = 0; j < coordinates.length; j++) {

                    x = coordinates[j].getAttribute("fenceName");

                    arr.push(new google.maps.LatLng(
                          parseFloat(coordinates[j].getAttribute("lat")),
                          parseFloat(coordinates[j].getAttribute("lng"))
                    ));

                    bounds.extend(arr[arr.length - 1])
                }

             
                polygons.push(new google.maps.Polygon({
                    paths: arr,
                    strokeColor: '#FF0000',
                    strokeOpacity: 0.8,
                    strokeWeight: 2,
                    fillColor: '#FF0000',
                    fillOpacity: 0.35,
        
                }));

                attachPolygonInfoWindow(polygons[polygons.length - 1], '<strong>' + x + '</strong>');
      
                polygons[polygons.length - 1].setMap(map);

            }


            function attachPolygonInfoWindow(polygon, html) {
                polygon.infoWindow = new google.maps.InfoWindow({
                    content: html,
                });

            
                google.maps.event.addListener(polygon, 'mouseover', function (e) {
                    var latLng = e.latLng;
                    this.setOptions({ fillOpacity: 0.1 });
                    polygon.infoWindow.setPosition(latLng);
                    polygon.infoWindow.open(map);
                });
                google.maps.event.addListener(polygon, 'mouseout', function () {
                    this.setOptions({ fillOpacity: 0.35 });
                    polygon.infoWindow.close();
                });
            }




            ///  alert(triangleCoords);
            //*************** Show Geofence **************/
            theFence = new google.maps.Polygon({
                paths: triangleCoords,
                strokeColor: "#FF0000",
                strokeOpacity: 0.6,
                strokeWeight: 2,
                fillColor: "#FF0000",
                fillOpacity: 0.35
            });
            theFence.setMap(map);
        }
        //******************* END GEOFENCE **************************/
        //*******************VehicleWithName*************************/


    </script>
    <script type="text/javascript">
        function copy_data(val) {
            var a = document.getElementById(val.id).value
            document.getElementById("hfValue").value = a
        }
    </script>
    <script type="text/javascript">
        function combofunction(the_value) {
            var sParts = the_value.split(",");
            document.getElementById('txtlat').value = sParts[0];
            document.getElementById('txtlon').value = sParts[1];
            //initialize();
            //var sParts = result.split(",");
            var latLong2 = new google.maps.LatLng(sParts[0], sParts[1]);
            //alert(latLong);
            map.setCenter(latLong2);
        }
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            $(".trigger1").click(function () {
                $(".panel").toggle("fast");
                $(this).toggleClass("active");
                return false;
            });
        });
    </script>
  
    <script type="text/javascript">
        $(document).ready(function () {
            $(".trigger").click(function () {
                $(".panel").toggle("fast");
                $(this).toggleClass("active");
                return false;
            });
        });
    </script>
</head>
<body onload="initialize();">
    <noscript>
        <b>JavaScript must be enabled in order for you to use Google Maps.</b> However,
        it seems JavaScript is either disabled or not supported by your browser. To view
        Google Maps, enable JavaScript by changing your browser options, and then try again.</noscript>
    <div id="container">
        <div id="map_canvas" style="width: 100%; height: 550px;">
        </div>
        <div class="panel1" style="height: 350px; width: 302px;">
            <div style="background: #FFFFD2; border: 1px solid #FF9E00; height: auto; padding: 1px 5px;
                width: 280px; z-index: 99999; margin-bottom: 5px;">
                To complete polygon, connect the end point of polygon with the starting point.
            </div>
            <div style="background: #FFFFD2; border: 1px solid #FF9E00; height: auto; padding: 1px 5px;
                width: 280px; z-index: 99999; margin-bottom: 10px;">
                Previously created fence will be over-written.
            </div>
            <input type="text" id="txtlat" style="display: none" />
            <input type="text" id="txtlon" style="display: none" />
            <div style="clear: both; height: 20px;">
            </div>
            <div>
                <label>
                    Fence Name:</label><br />
                <input type="text" id="txtFenceName" style="width: 234px;"  />
            </div>
            <div style="clear: both; height: 20px;">
            </div>
            <div>
                <label>
                    Alerts On:</label><br />
                SMS:
                <input type="checkbox" id="chksms" />
                EMAIL:
                <input type="checkbox" id="chkemail" />
            </div>
            <div style="clear: both; height: 20px;">
            </div>
            <div>
                <input id="saveFence" value="Save Fence" type="button" class="button" />
                <input id="reset" value="Reset" type="button" class="button" onclick="showDivclr()" />
            </div>
            <div id="Mesasage" style="display: none; color: #f21a1a; padding-top: 5px;">
            </div>
            <div id="dataPanel" style="display: none;">
            </div>
            <div id="resultPanel" style="height: 50px; font-size: small;" runat="server" clientidmode="Static">
            </div>
        </div>
        <a class="trigger1" href="#">Set Geofence</a>
    </div>
    
  
    <div id="Div1">
       
        <div style="width:140px !important;" class="panel"  >
            <div id="side_bar" style="padding: 25px 0px 10px 7px; height: 450px; overflow: auto;">
            </div>
            <div id="settings" style="border-top: dashed 1px #777;">
                <a onclick="reCenter();" href="#" style="color: #0000B7; font-weight: normal;">Reset
                    Map</a>&nbsp;<br />
                &nbsp; <a href="#" style="color: #0000B7; font-weight: normal;" onclick="InitializeTimer()">
                    Refresh</a>
                <p>
                    Show POI
                    <input type="checkbox" id="checkPOI" checked="checked" onclick="PointOfInterest()" />
                </p>
            </div>
        </div>
        <a class="trigger" href="#">Vehicles</a></div>

</body>
</html>
